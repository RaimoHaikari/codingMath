[{"C:\\Users\\raimo\\Documents\\math\\src\\index.js":"1","C:\\Users\\raimo\\Documents\\math\\src\\reportWebVitals.js":"2","C:\\Users\\raimo\\Documents\\math\\src\\App.js":"3","C:\\Users\\raimo\\Documents\\math\\src\\components\\trigonometry\\index.js":"4","C:\\Users\\raimo\\Documents\\math\\src\\components\\trigonometry\\trig.js":"5","C:\\Users\\raimo\\Documents\\math\\src\\store.js":"6","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\trigReducer.js":"7","C:\\Users\\raimo\\Documents\\math\\src\\components\\timer\\index.js":"8","C:\\Users\\raimo\\Documents\\math\\src\\components\\timer\\bouncing.js":"9","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\bouncingReducer.js":"10","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\timerReducer.js":"11","C:\\Users\\raimo\\Documents\\math\\src\\layout\\flies\\index.js":"12","C:\\Users\\raimo\\Documents\\math\\src\\components\\lissajousCurve\\index.js":"13","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\lissajousReducer.js":"14","C:\\Users\\raimo\\Documents\\math\\src\\components\\lissajousCurve\\lissajous.js":"15","C:\\Users\\raimo\\Documents\\math\\src\\layout\\rotatingArrow\\index.js":"16","C:\\Users\\raimo\\Documents\\math\\src\\components\\arctangent\\index.js":"17","C:\\Users\\raimo\\Documents\\math\\src\\components\\arctangent\\arctanget.js":"18","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\rotatingArrowReducer.js":"19","C:\\Users\\raimo\\Documents\\math\\src\\layout\\landingPage\\index.js":"20","C:\\Users\\raimo\\Documents\\math\\src\\components\\frontPage\\header.js":"21","C:\\Users\\raimo\\Documents\\math\\src\\components\\frontPage\\featured.js":"22","C:\\Users\\raimo\\Documents\\math\\src\\components\\frontPage\\products.js":"23","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\vectorReducer.js":"24","C:\\Users\\raimo\\Documents\\math\\src\\layout\\vector\\index.js":"25","C:\\Users\\raimo\\Documents\\math\\src\\services\\vector.js":"26","C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\index.js":"27","C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\physics.js":"28","C:\\Users\\raimo\\Documents\\math\\src\\layout\\advancedAcceleration\\index.js":"29","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\index.js":"30","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\advAccelerationReducer.js":"31","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\d3Acceleration.js":"32","C:\\Users\\raimo\\Documents\\math\\src\\hooks\\useEventListener.js":"33","C:\\Users\\raimo\\Documents\\math\\src\\layout\\tyomaa\\index.js":"34","C:\\Users\\raimo\\Documents\\math\\src\\iconComponents\\Hupu.js":"35","C:\\Users\\raimo\\Documents\\math\\src\\iconComponents\\IlotulitusRaketti.js":"36","C:\\Users\\raimo\\Documents\\math\\src\\layout\\planeetat\\index.js":"37","C:\\Users\\raimo\\Documents\\math\\src\\components\\gravity\\index.js":"38","C:\\Users\\raimo\\Documents\\math\\src\\components\\gravity\\D3Gravity.js":"39","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\gravitationReducer.js":"40","C:\\Users\\raimo\\Documents\\math\\src\\components\\navbar\\index.js":"41","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\navigationReducer.js":"42","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\toolbar.js":"43","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\debugControls.js":"44","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\meterPanel.js":"45","C:\\Users\\raimo\\Documents\\math\\src\\d3Components\\gauge\\index.js":"46","C:\\Users\\raimo\\Documents\\math\\src\\d3Components\\gauge\\d3Compass.js":"47","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\compass.js":"48","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\settingsPanel.js":"49","C:\\Users\\raimo\\Documents\\math\\src\\d3Components\\slider\\index.js":"50","C:\\Users\\raimo\\Documents\\math\\src\\d3Components\\slider\\d3Slider.js":"51","C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\slider\\index.js":"52","C:\\Users\\raimo\\Documents\\math\\src\\hooks\\useKonamiCode.js":"53","C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\toolbar.js":"54","C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\settingsPanel.js":"55","C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\meterPanel.js":"56","C:\\Users\\raimo\\Documents\\math\\src\\components\\toolbarHolder\\index.js":"57","C:\\Users\\raimo\\Documents\\math\\src\\components\\toolbarHolder\\toolbarGroub.js":"58","C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\NumberInput\\index.js":"59","C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\NumberInput\\inputElements.js":"60","C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\Toggle\\index.js":"61","C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\Toggle\\inputElements.js":"62","C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\RadioGroup\\index.js":"63","C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\RadioGroup\\inputElements.js":"64","C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\debugControls.js":"65","C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\Icons\\index.js":"66"},{"size":628,"mtime":1611520331123,"results":"67","hashOfConfig":"68"},{"size":362,"mtime":499162500000,"results":"69","hashOfConfig":"68"},{"size":1670,"mtime":1611497530905,"results":"70","hashOfConfig":"68"},{"size":1295,"mtime":1609186146212,"results":"71","hashOfConfig":"68"},{"size":2533,"mtime":1609270575250,"results":"72","hashOfConfig":"68"},{"size":1251,"mtime":1611498124982,"results":"73","hashOfConfig":"68"},{"size":253,"mtime":1609186548631,"results":"74","hashOfConfig":"68"},{"size":2340,"mtime":1609360603957,"results":"75","hashOfConfig":"68"},{"size":3142,"mtime":1609334312835,"results":"76","hashOfConfig":"68"},{"size":3016,"mtime":1609680999997,"results":"77","hashOfConfig":"68"},{"size":637,"mtime":1609358616507,"results":"78","hashOfConfig":"68"},{"size":308,"mtime":1609595376974,"results":"79","hashOfConfig":"68"},{"size":1620,"mtime":1609701326384,"results":"80","hashOfConfig":"68"},{"size":5380,"mtime":1609705338385,"results":"81","hashOfConfig":"68"},{"size":2152,"mtime":1609618057325,"results":"82","hashOfConfig":"68"},{"size":232,"mtime":1609856659102,"results":"83","hashOfConfig":"68"},{"size":1995,"mtime":1609942913753,"results":"84","hashOfConfig":"68"},{"size":2786,"mtime":1610889753728,"results":"85","hashOfConfig":"68"},{"size":509,"mtime":1609876775558,"results":"86","hashOfConfig":"68"},{"size":448,"mtime":1610202821964,"results":"87","hashOfConfig":"68"},{"size":614,"mtime":1610201886468,"results":"88","hashOfConfig":"68"},{"size":1471,"mtime":1611344271921,"results":"89","hashOfConfig":"68"},{"size":1604,"mtime":1611343335429,"results":"90","hashOfConfig":"68"},{"size":11383,"mtime":1614111360696,"results":"91","hashOfConfig":"68"},{"size":909,"mtime":1614083935012,"results":"92","hashOfConfig":"68"},{"size":10643,"mtime":1613654774629,"results":"93","hashOfConfig":"68"},{"size":2751,"mtime":1614111535976,"results":"94","hashOfConfig":"68"},{"size":5354,"mtime":1613764034421,"results":"95","hashOfConfig":"68"},{"size":1008,"mtime":1613054360204,"results":"96","hashOfConfig":"68"},{"size":4044,"mtime":1612383409049,"results":"97","hashOfConfig":"68"},{"size":8717,"mtime":1612642579883,"results":"98","hashOfConfig":"68"},{"size":5135,"mtime":1612383376755,"results":"99","hashOfConfig":"68"},{"size":1043,"mtime":1610654695128,"results":"100","hashOfConfig":"68"},{"size":227,"mtime":1614083771395,"results":"101","hashOfConfig":"68"},{"size":486,"mtime":1611344105063,"results":"102","hashOfConfig":"68"},{"size":4069,"mtime":1611344105063,"results":"103","hashOfConfig":"68"},{"size":694,"mtime":1611521542096,"results":"104","hashOfConfig":"68"},{"size":1508,"mtime":1611429652996,"results":"105","hashOfConfig":"68"},{"size":2359,"mtime":1611493867975,"results":"106","hashOfConfig":"68"},{"size":1789,"mtime":1611493883338,"results":"107","hashOfConfig":"68"},{"size":2558,"mtime":1611518231029,"results":"108","hashOfConfig":"68"},{"size":2098,"mtime":1611498768181,"results":"109","hashOfConfig":"68"},{"size":1129,"mtime":1613072696981,"results":"110","hashOfConfig":"68"},{"size":2940,"mtime":1611927534276,"results":"111","hashOfConfig":"68"},{"size":500,"mtime":1612123331569,"results":"112","hashOfConfig":"68"},{"size":1654,"mtime":1612122796490,"results":"113","hashOfConfig":"68"},{"size":5665,"mtime":1612124932936,"results":"114","hashOfConfig":"68"},{"size":1444,"mtime":1612124996674,"results":"115","hashOfConfig":"68"},{"size":1111,"mtime":1612642400288,"results":"116","hashOfConfig":"68"},{"size":1280,"mtime":1612644179687,"results":"117","hashOfConfig":"68"},{"size":2693,"mtime":1612644668404,"results":"118","hashOfConfig":"68"},{"size":2488,"mtime":1613593721855,"results":"119","hashOfConfig":"68"},{"size":1348,"mtime":1612963914219,"results":"120","hashOfConfig":"68"},{"size":1119,"mtime":1614023594762,"results":"121","hashOfConfig":"68"},{"size":4491,"mtime":1614022279762,"results":"122","hashOfConfig":"68"},{"size":661,"mtime":1613074069348,"results":"123","hashOfConfig":"68"},{"size":448,"mtime":1613054075752,"results":"124","hashOfConfig":"68"},{"size":804,"mtime":1613072096431,"results":"125","hashOfConfig":"68"},{"size":1420,"mtime":1613763577269,"results":"126","hashOfConfig":"68"},{"size":1490,"mtime":1613917255939,"results":"127","hashOfConfig":"68"},{"size":542,"mtime":1613827762911,"results":"128","hashOfConfig":"68"},{"size":892,"mtime":1613827394249,"results":"129","hashOfConfig":"68"},{"size":2795,"mtime":1614021957958,"results":"130","hashOfConfig":"68"},{"size":2144,"mtime":1614023173534,"results":"131","hashOfConfig":"68"},{"size":1114,"mtime":1614111535976,"results":"132","hashOfConfig":"68"},{"size":2881,"mtime":1614109982506,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},"1wlagv8",{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"137"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"137"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"137"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"137"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"137"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"137"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"137"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"137"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"137"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"137"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"137"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"137"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"137"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"137"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"137"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"137"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"137"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"137"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"137"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"137"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"137"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"137"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"137"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"137"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"137"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"265"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"137"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"137"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"C:\\Users\\raimo\\Documents\\math\\src\\index.js",["301","302","303","304","305"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport './index.css';\n\nimport App from './App';\nimport Trigonometry from './components/trigonometry'\nimport Timer from './components/timer';\nimport LissajousCurve from './layout/flies';\nimport RotatingArrow from \"./layout/rotatingArrow\";\nimport LandingPage from \"./layout/landingPage\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n/*\n\n<LissajousCurve />\n<Timer />\n<RotatingArrow />\n\n*/\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n",["306","307"],"C:\\Users\\raimo\\Documents\\math\\src\\reportWebVitals.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\App.js",["308"],"import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n/*\nimport Trigonometry from './components/trigonometry'\nimport Timer from './components/timer';\nimport LissajousCurve from './layout/flies';\nimport RotatingArrow from \"./layout/rotatingArrow\";\nimport LandingPage from \"./layout/landingPage\";\n*/\n\nimport Navbar from \"./components/navbar\"\nimport AdvancedAcceleration from \"./layout/advancedAcceleration\";\nimport Gravity from \"./layout/planeetat\";\nimport LissajousCurve from './layout/flies';\nimport LandingPage from \"./layout/landingPage\";\nimport Vectors from \"./layout/vector\";\nimport TestArea from \"./layout/tyomaa\"\n\nconst App = () => {\n\n\n\n  /*      <div>\n        <Link style={padding} to=\"/\">Home</Link>\n        <Link style={padding} to=\"/flies\">Kärpäset</Link>\n        <Link style={padding} to=\"/vector\">Ilotulitus</Link>\n        <Link style={padding} to=\"/acceleration\">Acceleration</Link>\n        <Link style={padding} to=\"/gravity\">Gravity</Link>\n        <Link style={padding} to=\"/testi\">Testarea</Link>\n      </div>\n  */\n  return (\n    <Router>\n\n      <Navbar />\n    \n      <Switch>\n        <Route path=\"/flies\">\n          <LissajousCurve />\n        </Route>\n        <Route path=\"/vector\">\n          <Vectors />\n        </Route>\n        <Route path=\"/acceleration\">\n          <AdvancedAcceleration />\n        </Route>\n        <Route path=\"/gravity\">\n          <Gravity />\n        </Route>\n        <Route path=\"/testi\">\n          <TestArea />\n        </Route>        \n        <Route path=\"/\">\n          <LandingPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n\n};\n\nexport default App;","C:\\Users\\raimo\\Documents\\math\\src\\components\\trigonometry\\index.js",["309","310","311","312"],"import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport {interpolateCividis, select} from \"d3\";\r\n\r\nimport './trigonometry.css';\r\n\r\nimport {sinWave} from \"./trig\";\r\n\r\nlet vis = null;\r\n\r\n/*\r\n * \r\n */\r\nconst Trigonometry = () => {\r\n\r\n    const[data, setData] = useState(null)\r\n\r\n    const[height, setHeight] = useState(500)\r\n    const[width, setWidth] = useState(500)\r\n\r\n    const refElement = useRef(null)\r\n\r\n    const getData = () => {\r\n\r\n        let angles = []\r\n\r\n        for(var angle = 0; angle < Math.PI * 2;  angle += 0.05){\r\n            angles.push(angle)\r\n        }\r\n        \r\n        return angles\r\n    }\r\n\r\n    const initVis = () => {\r\n\r\n        vis = sinWave()\r\n            .data(data)\r\n            .height(height)\r\n            .width(width)\r\n\r\n        select(refElement.current)\r\n            .call(vis)\r\n    }\r\n\r\n    const updateVis = () => {}\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(data === null){\r\n            setData(getData())\r\n        }\r\n            \r\n\r\n        if(data && data.length){\r\n\r\n            if(vis === null)\r\n                initVis()\r\n            else\r\n                updateVis()\r\n        }\r\n\r\n    }, [data])\r\n\r\n    return (\r\n        <div ref={refElement} className=\"trig-container\">\r\n        </div>\t       \r\n    );\r\n}\r\n\r\nexport default Trigonometry;","C:\\Users\\raimo\\Documents\\math\\src\\components\\trigonometry\\trig.js",["313","314","315","316","317"],"import * as d3 from \"d3\";\r\nimport { \r\n    select, \r\n    min,\r\n    max, \r\n    extent,\r\n    scaleLinear \r\n} from \"d3\";\r\n\r\nexport const sinWave = () => {\r\n\r\n    let svg;\r\n    let gElem;\r\n\r\n    let data = []\r\n    let width = 200;\r\n    let height = 200;\r\n    let margin = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n    let xScale;\r\n    let yScale;\r\n\r\n    let updateData;\r\n    let updateHeight;\r\n    let updateWidth;\r\n\r\n    function chart(selection){\r\n\r\n        /*\r\n\r\n\r\n        */\r\n        selection.each(function(){\r\n\r\n            console.log(d3.extent(data.map(d => Math.sin(d))))\r\n\r\n            xScale = d3.scaleLinear()\r\n                .domain(d3.extent(data))                   // unit: phenomeon\r\n                .range([margin.left, (width-margin.left)]) // unit: pixels\r\n\r\n\r\n            yScale = d3.scaleLinear()\r\n                .domain(d3.extent(data.map(d => Math.sin(d))))  // unit: phenomeon\r\n                .range([margin.top, (height-margin.bottom)])    // unit: pixels\r\n\r\n            svg = d3\r\n                .select(this)\r\n                .append('svg')\r\n                .attr(\"viewBox\", [0,0, width, height])\r\n\r\n            gElem = svg\r\n                .append(\"g\")\r\n                .attr('transform', `scale(1, -1) translate(${0},${-height})`)\r\n                //.attr('transform', `translate(${0},${height/2})`)\r\n                // scale(1, -1)\r\n\r\n            gElem\r\n                .selectAll(\"circle\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                    .style(\"fill\", \"black\")\r\n                    .attr(\"r\", 1)\r\n                    .attr(\"cx\", d => xScale(d))\r\n                    .attr(\"cy\", d => yScale(Math.sin(d)))\r\n\r\n            updateData = function() {}\r\n            updateHeight = function() {}\r\n            updateWidth = function() {}\r\n\r\n        })\r\n    }\r\n\r\n    chart.data = function(val){\r\n\r\n        if(!arguments.length) return data;\r\n\r\n        data = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.height = function(val){\r\n\r\n        if(!arguments.length) return height;\r\n\r\n        height = val;\r\n\r\n        if(typeof updateHeight === 'function')\r\n            updateHeight();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.width = function(val){\r\n\r\n        if(!arguments.length) return width;\r\n\r\n        width = val;\r\n\r\n        if(typeof updataWidth === 'function')\r\n            updateWidth();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    return chart\r\n\r\n}","C:\\Users\\raimo\\Documents\\math\\src\\store.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\reducers\\trigReducer.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\timer\\index.js",["318","319","320","321","322","323","324"],"import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {animate, stopAnimation, toggleActiveState, updateYAndAngle} from \"../../reducers/bouncingReducer\";\r\n\r\nimport {bouncing} from \"./bouncing\";\r\nimport {select} from \"d3\";\r\n\r\nlet vis = null;\r\n\r\n\r\n/*\r\n * https://dev.to/emmaadesile/build-a-timer-using-react-hooks-3he2\r\n */\r\nconst Timer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const refElement = useRef(null);\r\n\r\n    const {angle, data, height, isActive, offset, speed, width, x, y, } = useSelector(state => {\r\n        return {\r\n            ...state.bouncing\r\n        }\r\n    })\r\n\r\n\r\n    const initVis = () => {\r\n\r\n        vis = bouncing()\r\n            .data(data)\r\n            .height(height)\r\n            .width(width)\r\n            .centerX(x)\r\n            .centerY(y)\r\n\r\n        select(refElement.current)\r\n            .call(vis)\r\n    }\r\n\r\n    function stopTimer() {\r\n\r\n        console.log(\"Pitäs keskeyttää\")\r\n\r\n    }\r\n\r\n    const updateVis = () => {\r\n\r\n        vis\r\n            .centerY(y)\r\n    }\r\n\r\n    useEffect(() => {\r\n            \r\n        if(data && data.length){\r\n\r\n            if(vis === null)\r\n                initVis()\r\n            else\r\n                updateVis()\r\n        }\r\n\r\n    }, [data, y])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(animate())\r\n\r\n        /*\r\n\r\n        let intervalId;\r\n\r\n        if(isActive){\r\n\r\n            intervalId = setInterval(() => {\r\n\r\n                dispatch(updateYAndAngle())\r\n\r\n            }, 100)\r\n        }\r\n\r\n        return () => clearInterval(intervalId)\r\n        */\r\n\r\n    },[isActive, angle])\r\n    \r\n\r\n\r\n    return (\r\n       <>\r\n        <div ref={refElement} className=\"trig-container\">\r\n        </div>\t \r\n        <div>\r\n            <button\r\n                //onClick={() => foobar()}\r\n                onClick={() => dispatch(toggleActiveState())}\r\n            >\r\n                {isActive ? 'Pysäytä' : 'Käynnistä'}\r\n            </button>\r\n            <button\r\n                onClick={() => dispatch(stopAnimation())}\r\n            >\r\n                Resetoi\r\n            </button>\r\n            <button\r\n                onClick={() => dispatch(animate())}\r\n            >\r\n                FooBar\r\n            </button>\r\n        </div>\r\n       </>      \r\n    );\r\n}\r\n\r\nexport default Timer;","C:\\Users\\raimo\\Documents\\math\\src\\components\\timer\\bouncing.js",["325","326","327","328","329","330"],"import * as d3 from \"d3\";\r\nimport { \r\n    select \r\n} from \"d3\";\r\n\r\nexport const bouncing = () => {\r\n\r\n    let svg;\r\n    let gElem;\r\n    let circle;\r\n\r\n    let data = []\r\n    let width = 200;\r\n    let height = 200;\r\n    let margin = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n    let centerX = 0\r\n    let centerY = 0\r\n\r\n\r\n    let count = 0;\r\n    let offset;\r\n    let speed = 0.1;\r\n    let angle = 0;\r\n\r\n    let updateData;\r\n    let updateHeight;\r\n    let updateWidth;\r\n\r\n    function triggerWave(){\r\n\r\n\r\n        /*\r\n        let y = centerY + Math.sin(angle) * offset;\r\n        angle += speed\r\n\r\n        circle\r\n            .attr(\"cy\", y)\r\n        \r\n        console.log(\"Count\", count)\r\n\r\n        if(count < 50){\r\n            count++\r\n\r\n            d3.timeout(triggerWave, 10)\r\n        } else {\r\n            return\r\n        }\r\n        */\r\n        \r\n        \r\n\r\n    }\r\n\r\n\r\n    function chart(selection){\r\n\r\n        /*\r\n         *\r\n         */\r\n        selection.each(function(){\r\n\r\n            svg = d3\r\n                .select(this)\r\n                .append('svg')\r\n                .attr(\"viewBox\", [0,0, width, height])\r\n\r\n            gElem = svg\r\n                .append('g')\r\n                .attr('transform', ` translate(${width/2},${height/2})`)\r\n\r\n            circle = gElem\r\n                .selectAll(\"circle\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                    .attr(\"cy\", centerY)\r\n                    .attr(\"cx\", centerX)\r\n                    .attr(\"r\", 20)\r\n\r\n\r\n                /*\r\n            gElem\r\n                .append(\"rect\")\r\n                    .attr(\"width\", 50)\r\n                    .attr(\"height\", 50)\r\n                    */\r\n            \r\n\r\n            triggerWave()\r\n\r\n            updateData = function() {\r\n\r\n                circle\r\n                    .attr(\"cy\", centerY)\r\n                    \r\n\r\n            }\r\n\r\n            updateHeight = function() {}\r\n            updateWidth = function() {}\r\n\r\n        })\r\n    }\r\n\r\n    chart.centerX = function(val){\r\n\r\n        if(!arguments.length) return centerX;\r\n\r\n        centerX = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.centerY = function(val){\r\n\r\n        if(!arguments.length) return centerY;\r\n\r\n        centerY = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.data = function(val){\r\n\r\n        if(!arguments.length) return data;\r\n\r\n        data = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.height = function(val){\r\n\r\n        if(!arguments.length) return height;\r\n\r\n        height = val;\r\n\r\n        if(typeof updateHeight === 'function')\r\n            updateHeight();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.width = function(val){\r\n\r\n        if(!arguments.length) return width;\r\n\r\n        width = val;\r\n\r\n        if(typeof updataWidth === 'function')\r\n            updateWidth();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    return chart\r\n\r\n}","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\bouncingReducer.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\reducers\\timerReducer.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\layout\\flies\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\lissajousCurve\\index.js",["331","332"],"import React, {useEffect, useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {select} from \"d3\";\r\n\r\nimport {lissajous} from './lissajous'\r\nimport {animate, liikuta, toggleActiveState} from \"../../reducers/lissajousReducer\";\r\n\r\nlet vis = null;\r\n\r\n\r\n/*\r\n * https://dev.to/emmaadesile/build-a-timer-using-react-hooks-3he2\r\n */\r\nconst LissajousCurve = () => {\r\n\r\n\r\n    const refElement = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const {data, height, isActive, width} = useSelector(state => {\r\n\r\n        return {\r\n            ...state.lissajous\r\n        }\r\n    })\r\n\r\n    const initVis = () => {\r\n\r\n        vis = lissajous()\r\n            .data(data)\r\n            .height(height)\r\n            .width(width)\r\n\r\n        select(refElement.current)\r\n            .call(vis)\r\n            \r\n    }\r\n\r\n    const updateVis = () => {\r\n\r\n        vis\r\n            .data(data)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n            \r\n        if(data && data.length){\r\n\r\n            if(vis === null)\r\n                initVis()\r\n            else\r\n                updateVis()\r\n        }\r\n\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(animate())\r\n\r\n    }, [isActive])\r\n\r\n\r\n    return (\r\n       <>\r\n         <div ref={refElement} className=\"trig-container\">\r\n        </div>\r\n        <button\r\n            onClick={() => dispatch(toggleActiveState())}\r\n        >{isActive?'Pysäytä':'Käynnistä'}</button>\t  \r\n        <button\r\n            onClick={() => dispatch(liikuta())}\r\n        >Liikuta</button>\r\n       </>      \r\n    );\r\n}\r\n\r\nexport default LissajousCurve;","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\lissajousReducer.js",["333","334","335","336","337","338"],"// Circles\r\nconst CIRCLERADIUS = 2\r\n\r\n// Canvas\r\nconst HEIGHT = 500\r\nconst WIDTH = 500\r\n\r\n// Animation\r\nconst X_ANGLE = 0\r\nconst Y_ANGLE = 0\r\nconst X_RADIUS = 225\r\nconst Y_RADIUS = 225\r\nconst X_SPEED = 0.1\r\nconst Y_SPEED = 0.1\r\n\r\n/*\r\n * Lähtötilanne\r\n */\r\nconst getInitialState = () => {\r\n\r\n    let data = []\r\n\r\n    for(var i = 0; i < 50; i++){\r\n\r\n\r\n        let xAngle = 2 * Math.random() * Math.PI\r\n        let yAngle = 2 * Math.random() * Math.PI\r\n\r\n        /*\r\n         *  -> 20\r\n         * Math.floor(Math.random() * 16) + 5;\r\n        */\r\n\r\n        let xRadius = Math.floor(Math.random() * 176) + 50;\r\n        let yRadius = Math.floor(Math.random() * 176) + 50;\r\n\r\n        /* \r\n         * https://stackoverflow.com/questions/17726753/get-a-random-number-between-0-0200-and-0-120-float-numbers\r\n         */\r\n        let xSpeed = (Math.random() * (0.01 - 0.9) + 0.9)\r\n        let ySpeed = (Math.random() * (0.01 - 0.9) + 0.9)\r\n\r\n        \r\n        let x = Math.cos(xAngle) * xRadius\r\n        let y = Math.sin(yAngle) * yRadius\r\n\r\n        data = data.concat({\r\n            x: x,\r\n            y: y,\r\n            radius: CIRCLERADIUS,\r\n            xAngle: xAngle + xSpeed,\r\n            xRadius: xRadius,\r\n            xSpeed: xSpeed,\r\n            yAngle: yAngle + xSpeed,\r\n            yRadius: yRadius,\r\n            ySpeed: ySpeed\r\n        })\r\n\r\n    }\r\n\r\n    return {\r\n        data: data,\r\n        height: HEIGHT,\r\n        isActive: false,\r\n        width: WIDTH\r\n    }\r\n\r\n}\r\n\r\n/*\r\n            x: x,\r\n            y: y,\r\n            radius: CIRCLERADIUS,\r\n            xAngle: xAngle + X_SPEED,\r\n            yAngle: yAngle + Y_SPEED\r\n*/\r\nconst calculateNewState = (state) => {\r\n\r\n    let data = state.data.map(d => {\r\n\r\n        let newX = Math.cos(d.xAngle) * d.xRadius\r\n        let newY = Math.sin(d.yAngle) * d.yRadius\r\n        let newXAngle = d.xAngle + d.xSpeed\r\n        let newYAngle = d.yAngle + d.ySpeed\r\n\r\n        return {\r\n            ...d,\r\n            x: newX,\r\n            y: newY,\r\n            xAngle: newXAngle,\r\n            yAngle: newYAngle\r\n        }\r\n    })\r\n\r\n    return {\r\n        ...state,\r\n        data: data\r\n    }\r\n\r\n}\r\n\r\n/*\r\n * A C T I O N I T\r\n */\r\n\r\n/*\r\n * Animaation pyöritys\r\n * - alkuosa nollaa timerin, mikäli animaatio on ollut pyörimässä, pysäytetään se\r\n * - mikäli animaation halutaan käyvän (isActive === true), käynnistetään \r\n *   timeri, joka pyörittää seuraavan  aseman laskevaa tilapäivitystä\r\n * - mikäli action-kutsu tulee sen jälkeen, kun isActive -tila on vaihtunut\r\n *   suoritetaan vain alkuosa, eli pyörivän timerin sulkeminen...\r\n */\r\nexport const animate = () => {\r\n\r\n    return (dispatch, state) => {\r\n\r\n        /*\r\n         * Napataan ajastimen id talteen, jotta sille voidaan antaa pysäytyskäsky\r\n         */\r\n        let intervalId;\r\n\r\n        /*\r\n         * Voidaanko animaatio käynnistää?\r\n         * - ei liity ajastimeen, vaan siihen onko käyttäjä käynnistänyt toiminnon\r\n         */\r\n        let isActive = state().lissajous.isActive;\r\n\r\n        /*\r\n         * Onko ajastin päällä.\r\n         * - animaation sujuvuuden kannalta aikaisempi kierros pitää tarvittaessa keskeyttää?\r\n         */\r\n        let timerRunning = state().timer.running;\r\n        let timerId = state().timer.id;\r\n\r\n        if(timerRunning) {\r\n            clearInterval(timerId);\r\n            dispatch({type: 'TIMER_CLEAR'});\r\n        } \r\n\r\n        if(isActive){\r\n\r\n            intervalId = setInterval(() => {\r\n\r\n                dispatch({\r\n                    type: 'LISSAJOUS_ANIMATE',\r\n                    data: {}\r\n                })\r\n    \r\n            }, 100)\r\n\r\n                    // kirjataan timerin käynnistys muistiin\r\n            dispatch({\r\n                type: 'TIMER_START',\r\n                data: {\r\n                    id: intervalId\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetAnimation = () => {\r\n\r\n    return (dispatch,state) => {\r\n\r\n        // - onko jo juoksemassa\r\n        let timerRunning = state().timer.running;\r\n        let timerId = state().timer.id;\r\n        \r\n        if(timerRunning) {\r\n            clearInterval(timerId);\r\n            dispatch({type: 'TIMER_CLEAR'});\r\n        } \r\n\r\n        dispatch({\r\n            type: 'RESET_LISSAJOUS',\r\n            data: {}\r\n        })\r\n    }    \r\n\r\n}\r\n\r\n\r\n/*\r\n * Kytketään animaation käynnistävä muuttuja joko päälle tai pois päältä\r\n * - muuttuja: isActive\r\n */\r\nexport const toggleActiveState = () => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type: 'LISSAJOUS_TOGGLE_ACTIVE',\r\n            data: {}\r\n        })\r\n    }\r\n}\r\n\r\nexport const liikuta = () => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type: 'LISSAJOUS_ANIMATE',\r\n            data: {}\r\n        })\r\n    }\r\n}\r\n\r\n\r\n/*\r\n *             \r\n */\r\nconst lissajousReducer = (state = getInitialState(), action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'LISSAJOUS_ANIMATE':\r\n\r\n            return calculateNewState(state)\r\n\r\n        case 'LISSAJOUS_TOGGLE_ACTIVE':\r\n\r\n            const newState = !state.isActive\r\n\r\n            return {\r\n                ...state,\r\n                isActive: newState\r\n            }\r\n\r\n        case 'RESET_LISSAJOUS':\r\n\r\n            return getInitialState()\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default lissajousReducer;\r\n\r\n","C:\\Users\\raimo\\Documents\\math\\src\\components\\lissajousCurve\\lissajous.js",["339","340"],"import * as d3 from \"d3\";\r\nimport { \r\n    select\r\n} from \"d3\";\r\n\r\nexport const lissajous = () => {\r\n\r\n    let svg;\r\n    let gElem;\r\n    let circles;\r\n\r\n    let data = []\r\n    let width = 200;\r\n    let height = 200;\r\n    let margin = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n    let updateData;\r\n    let updateHeight;\r\n    let updateWidth;\r\n\r\n    function chart(selection){\r\n\r\n        /*\r\n         *\r\n         */\r\n        selection.each(function(){\r\n\r\n            svg = d3\r\n                .select(this)\r\n                .append('svg')\r\n                .attr(\"viewBox\", [0,0, width, height])\r\n\r\n            gElem = svg\r\n                .append('g')\r\n                .attr('transform', ` translate(${width/2},${height/2})`)\r\n\r\n            circles = gElem\r\n                .selectAll(\"circle\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                    .style(\"stroke\", \"gray\")\r\n                    .style(\"fill\", \"black\")\r\n                    .attr(\"r\", d => d.radius)\r\n                    .attr(\"cx\", d => d.x)\r\n                    .attr(\"cy\", d => d.y)\r\n\r\n            updateData = function() {\r\n\r\n                circles\r\n                    .data(data)\r\n                    .attr(\"r\", d => d.radius)\r\n                    .attr(\"cx\", d => d.x)\r\n                    .attr(\"cy\", d => d.y)\r\n\r\n            }\r\n\r\n            updateHeight = function() {}\r\n            updateWidth = function() {}\r\n\r\n        })\r\n    }\r\n\r\n    chart.data = function(val){\r\n\r\n        if(!arguments.length) return data;\r\n\r\n        data = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.height = function(val){\r\n\r\n        if(!arguments.length) return height;\r\n\r\n        height = val;\r\n\r\n        if(typeof updateHeight === 'function')\r\n            updateHeight();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.width = function(val){\r\n\r\n        if(!arguments.length) return width;\r\n\r\n        width = val;\r\n\r\n        if(typeof updataWidth === 'function')\r\n            updateWidth();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    return chart\r\n\r\n}","C:\\Users\\raimo\\Documents\\math\\src\\layout\\rotatingArrow\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\arctangent\\index.js",["341","342"],"import React, {useEffect, useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {select} from \"d3\";\r\n\r\n//import {setVis} from \"../../reducers/rotatingArrowReducer\";\r\n\r\n// - visualisoinnin toteuttava D3 komponentti\r\nimport {arctanget} from \"./arctanget\";\r\n\r\nconst Arctangent = () => {\r\n\r\n    const refElement = useRef(null);\r\n    const visFunction = useRef(null)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {data, height, width} = useSelector(state => state.rotatingArrow)\r\n\r\n    const initVis = () => {\r\n\r\n        visFunction.current = arctanget()\r\n            .data(data)\r\n            .height(height)\r\n            .width(width)\r\n\r\n        select(refElement.current)\r\n            .call(visFunction.current)\r\n            \r\n    }\r\n\r\n    const updateVis = () => {\r\n        visFunction.current\r\n            .data(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(data && data.length){\r\n\r\n            if(visFunction.current === null)\r\n                initVis()\r\n            else\r\n                updateVis()\r\n\r\n        }\r\n        \r\n\r\n    }, [data])\r\n\r\n    return (\r\n        <>\r\n         <div >\r\n            <svg className=\"rot-arr-container\" ref={refElement} id=\"mainSVG\" width=\"600\" height=\"500\">\r\n                <defs>\r\n                    <g \r\n                        id=\"mySymbol\" \r\n                        transform=\"translate(-50 -50) rotate(90, 50, 50)\"\r\n                    >\r\n                        <path \r\n                            id=\"svg_3\"\r\n                            d=\"m0,50l50,-50l50,50l-25,0l0,50l-50,0l0,-50l-25,0z\" \r\n                            strokeLinecap=\"null\" \r\n                            strokeLinejoin=\"null\" \r\n                            strokeDasharray=\"null\" \r\n                            strokeWidth=\"0\" \r\n                            fill=\"#000000\"\r\n                        />\r\n                    </g>\r\n                </defs>\r\n            </svg>\r\n\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Arctangent;","C:\\Users\\raimo\\Documents\\math\\src\\components\\arctangent\\arctanget.js",["343","344","345"],"import * as d3 from \"d3\";\r\nimport { \r\n    select\r\n} from \"d3\";\r\n\r\n/*\r\n * https://observablehq.com/@d3/d3v6-migration-guide#pointer\r\n * https://observablehq.com/@d3/multitouch\r\n */\r\nexport const arctanget = () => {\r\n\r\n    let svg;\r\n    let gElem;\r\n    let arrow;\r\n\r\n    let data = []\r\n    let width = 200;\r\n    let height = 200;\r\n    let margin = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n    /*\r\n     * Mihin kohtaa def:stä luettu nuoli sijoitetaan\r\n     */\r\n    let origoX\r\n    let origoY\r\n\r\n    let updateData;\r\n    let updateHeight;\r\n    let updateWidth;\r\n\r\n    function chart(selection){\r\n\r\n        /*\r\n         *\r\n         */\r\n        selection.each(function(){\r\n\r\n            origoX = width / 2\r\n            origoY = height / 2\r\n\r\n            svg = d3\r\n                .select(this)\r\n                //.append('svg')\r\n                .attr(\"viewBox\", [0,0, width, height])\r\n                .on(\"mousemove\", function(event) {\r\n                    const {clientX, clientY} = event\r\n\r\n                    let dx = clientX - origoX\r\n                    let dy = clientY - origoY\r\n\r\n                    let angle = Math.atan2(dy, dx)\r\n                    let asDegrees = (angle * 180 / Math.PI) + 90\r\n\r\n                    d3\r\n                        .select(\"#mySymbol\")\r\n                        .attr(\"transform\", `translate(-50,-50) rotate(${asDegrees}, 50, 50)`);            \r\n                })\r\n\r\n            gElem = svg\r\n                .append('g')\r\n                .attr('transform', ` translate(${width/2},${height/2})`)\r\n\r\n            arrow = gElem\r\n                .selectAll(\"use\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"use\")\r\n                .attr(\"xlink:href\",\"#mySymbol\")\r\n                \r\n            updateData = function() {\r\n\r\n                let str = \"translate(50,50) rotate(45, 50, 50)\"\r\n\r\n                d3\r\n                    .select(\"#mySymbol\")\r\n                    .attr(\"transform\", str);\r\n            }\r\n\r\n            updateHeight = function() {}\r\n            updateWidth = function() {}\r\n\r\n        })\r\n    }\r\n\r\n    chart.data = function(val){\r\n\r\n        if(!arguments.length) return data;\r\n\r\n        data = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.height = function(val){\r\n\r\n        if(!arguments.length) return height;\r\n\r\n        height = val;\r\n\r\n        if(typeof updateHeight === 'function')\r\n            updateHeight();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.width = function(val){\r\n\r\n        if(!arguments.length) return width;\r\n\r\n        width = val;\r\n\r\n        if(typeof updataWidth === 'function')\r\n            updateWidth();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    return chart\r\n\r\n}","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\rotatingArrowReducer.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\layout\\landingPage\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\frontPage\\header.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\frontPage\\featured.js",["346","347","348","349"],"import React from 'react';\r\n\r\nimport {ReactComponent as Tupu} from \"../../svgImages/tupu.svg\";\r\n// import {ReactComponent as Hupu} from \"../../svgImages/hupu.svg\";\r\nimport {ReactComponent as Lupu} from \"../../svgImages/lupu.svg\";\r\n\r\nimport Hupu from '../../iconComponents/Hupu'\r\nimport IlotulitusRaketti from '../../iconComponents/IlotulitusRaketti';\r\n\r\nconst Featured = () => {\r\n    return (\r\n        <section className=\"featured\">\r\n            <div className=\"container\">\r\n\r\n                <h2 className=\"section-title\">Featured products</h2>\r\n                    \r\n                <div className=\"split\">\r\n\r\n                    <a href=\"#\" className=\"featured_item\">\r\n                        <IlotulitusRaketti />\r\n                        <p className=\"featured_details\"><span className=\"price\">99$</span>homman nimi oli saunaan!</p>\r\n                    </a>\r\n\r\n                    <a href=\"#\" className=\"featured_item\">\r\n                        <Hupu />\r\n                        <p className=\"featured_details\"><span className=\"price\">99$</span>homman nimi oli saunaan!</p>\r\n                    </a>\r\n\r\n                    <a href=\"#\" className=\"featured_item\">\r\n                        <Lupu />\r\n                        <p className=\"featured_details\"><span className=\"price\">99$</span>homman nimi oli saunaan!</p>\r\n                    </a>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Featured;","C:\\Users\\raimo\\Documents\\math\\src\\components\\frontPage\\products.js",["350","351","352"],"import React from 'react';\r\n\r\nimport {ReactComponent as Spiral} from \"../../svgImages/sprial.svg\";\r\nimport {ReactComponent as Tahti} from \"../../svgImages/tahti.svg\";\r\nimport {ReactComponent as Lahtikko} from \"../../svgImages/lahtikko.svg\";\r\n\r\nconst Products = () => {\r\n    return (\r\n        <section className=\"our-products\">\r\n\r\n            <div className=\"container\">\r\n\r\n                <h2 className=\"section-title\">Tuottehemme</h2>\r\n\r\n                <article className=\"product product-red spacing\">\r\n                    <Spiral />\r\n                    <h3 className=\"product-title\">Attributes</h3>\r\n                    <p className=\"product-description\">Blinking and flashing animation can be problematic for people</p>\r\n                    <a href=\"\" className=\"btn\">Kerro lisää</a>\r\n                </article>\r\n\r\n                <article className=\"product product-yellow spacing\">\r\n                    <Tahti />\r\n                    <h3 className=\"product-title\">Kolpakko</h3>\r\n                    <p className=\"product-description\">Näin huutaa huutosakki loppusoinnuton</p>\r\n                    <a href=\"\" className=\"btn\">Tell me more</a>\r\n                </article>\r\n\r\n                <article className=\"product product-green spacing\">\r\n                    <Lahtikko />\r\n                    <h3 className=\"product-title\">Rahapussi</h3>\r\n                    <p className=\"product-description\">Höpö höpö löpö</p>\r\n                    <a href=\"\" className=\"btn\">Visa mig</a>\r\n                </article>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Products;","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\vectorReducer.js",["353"],"C:\\Users\\raimo\\Documents\\math\\src\\layout\\vector\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\services\\vector.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\index.js",["354","355","356"],"C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\physics.js",["357","358"],"import * as d3 from \"d3\";\r\nimport { \r\n    select\r\n} from \"d3\";\r\n\r\nexport const physics = () => {\r\n\r\n    let svg;\r\n    let gElem;\r\n    let backgroundRect;\r\n    let circles;\r\n\r\n    let data = []\r\n\r\n    // \"Kankaan\" leveys ja korkeus\r\n    let width = 600;        \r\n    let height = 600;\r\n\r\n    // millä alueella objektien pitää pysyä\r\n    let heightOfAllowedRange = 400;\r\n    let widthOfAllowedRange = 400;\r\n\r\n    let margin = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n    let opacity = 1;\r\n\r\n    let updateData;\r\n    let updateHeight;\r\n    let updateWidth;\r\n    let updateAllowedRange;\r\n\r\n    function chart(selection){\r\n\r\n        /*\r\n         *\r\n         */\r\n        selection.each(function(){\r\n\r\n            svg = d3\r\n                .select(this)\r\n                .append('svg')\r\n                .attr(\"viewBox\", [0,0, width, height]);\r\n                    //.attr(\"width\", width)\r\n                    //.attr(\"height\", height);\r\n\r\n            gElem = svg\r\n                .append('g')\r\n                .attr('transform', ` translate(${width/2},${height/2})`)\r\n\r\n                \r\n            backgroundRect = gElem\r\n                .append('rect')\r\n                    .attr(\"x\", -widthOfAllowedRange/2)\r\n                    .attr(\"y\", -heightOfAllowedRange/2)\r\n                    .attr(\"width\", widthOfAllowedRange)\r\n                    .attr(\"height\", heightOfAllowedRange)\r\n                    .attr(\"stroke\",\"pink\")\r\n                    .attr(\"stroke-width\",\"5\")\r\n                    .attr(\"fill\", \"none\");\r\n                    \r\n\r\n            circles = gElem\r\n                .selectAll(\"circle\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                    .style(\"stroke\", \"none\")\r\n                    .style(\"fill\", \"navy\")\r\n                    .attr(\"r\", 6)\r\n                    .attr(\"cx\", d => d.getVector().getX())\r\n                    .attr(\"cy\", d => d.getVector().getY())\r\n                    .attr(\"fill-opacity\", opacity)\r\n\r\n\r\n\r\n            updateData = function() {\r\n\r\n                circles = gElem\r\n                    .selectAll(\"circle\")\r\n                    .data(data)\r\n\r\n                circles\r\n                        .style(\"fill\", d => d.getColor())\r\n                        .attr(\"cx\", d => d.getVector().getX())\r\n                        .attr(\"cy\", d => d.getVector().getY())\r\n                        .attr(\"fill-opacity\", opacity)\r\n\r\n                circles\r\n                    .enter()\r\n                        .append(\"circle\")\r\n                            .style(\"stroke\", \"none\")\r\n                            .style(\"fill\", \"navy\")\r\n                            .attr(\"r\", 6)\r\n                            .attr(\"cx\", d => d.getVector().getX())\r\n                            .attr(\"cy\", d => d.getVector().getY())\r\n                            .attr(\"fill-opacity\", opacity)\r\n\r\n                circles\r\n                    .exit()\r\n                    .remove()\r\n\r\n            }\r\n\r\n            updateHeight = function() {}\r\n\r\n            updateWidth = function() {}\r\n\r\n            updateAllowedRange = function() {\r\n\r\n                backgroundRect\r\n                    .attr(\"x\", -widthOfAllowedRange/2)\r\n                    .attr(\"y\", -heightOfAllowedRange/2)\r\n                    .attr(\"width\", widthOfAllowedRange)\r\n                    .attr(\"height\", heightOfAllowedRange)\r\n\r\n                \r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    chart.data = function(val){\r\n\r\n        if(!arguments.length) return data;\r\n\r\n        data = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.height = function(val){\r\n\r\n        if(!arguments.length) return height;\r\n\r\n        height = val;\r\n\r\n        if(typeof updateHeight === 'function')\r\n            updateHeight();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    /*\r\n     * Objektien pitää pysyä rajatun alueen sisällä, alue on pienempi kuin\r\n     * animaation esittämiseen käytetty SVG -elementti, jotta nähdään\r\n     * objektit pysyvät annetuissa rajoissa\r\n     */\r\n    chart.heightOfAllowedRange = function(val){\r\n\r\n        if(!arguments.length) return heightOfAllowedRange;\r\n\r\n        heightOfAllowedRange = val;\r\n\r\n        if(typeof updateAllowedRange === 'function')\r\n            updateAllowedRange();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.opacity = function(val){\r\n \r\n        if(!arguments.length) return opacity;\r\n\r\n        opacity = val;\r\n   \r\n        return chart       \r\n    }\r\n\r\n    /*\r\n     * Animaation esittämiseen käytettävän SVG -elementin leveys\r\n     */ \r\n    chart.width = function(val){\r\n\r\n        if(!arguments.length) return width;\r\n\r\n        width = val;\r\n\r\n        if(typeof updateWidth === 'function')\r\n            updateWidth();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n\r\n    /*\r\n     * Objektien pitää pysyä rajatun alueen sisällä, alue on pienempi kuin\r\n     * animaation esittämiseen käytetty SVG -elementti, jotta nähdään\r\n     * objektit pysyvät annetuissa rajoissa\r\n     */\r\n    chart.widthOfAllowedRange = function(val){\r\n\r\n        if(!arguments.length) return widthOfAllowedRange;\r\n\r\n        widthOfAllowedRange = val;\r\n\r\n        if(typeof updateAllowedRange === 'function')\r\n            updateAllowedRange();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    return chart\r\n\r\n}","C:\\Users\\raimo\\Documents\\math\\src\\layout\\advancedAcceleration\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\index.js",["359","360","361","362","363"],"import React, {useEffect, useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {select} from \"d3\";\r\n\r\nimport useEventListener from \"../../hooks/useEventListener\";\r\n\r\nimport {\r\n    accelerate, \r\n    animate, \r\n    kaannaVasen,\r\n    kaannaOikea, \r\n    liikuta, \r\n    slowdown, \r\n    toggleActiveState\r\n} from \"../../reducers/advAccelerationReducer\";\r\n\r\nimport {d3Acceleration} from \"./d3Acceleration\";\r\n\r\nimport './acceleration.css';\r\n\r\nconst DynamicAcceleration = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const refElement = useRef(null);\r\n    const visFunction = useRef(null)\r\n\r\n    const {data, height, isActive, width, xScale, yScale} = useSelector(state => state.acceleration)\r\n\r\n    /*\r\n     * d3 -komponentin alustus\r\n     */\r\n    const initVis = () => {\r\n\r\n        visFunction.current = d3Acceleration()\r\n            .data(data)\r\n            .height(height)\r\n            .width(width)\r\n            .xScale(xScale)\r\n            .yScale(yScale)\r\n\r\n        select(refElement.current)\r\n            .call(visFunction.current)\r\n            \r\n    }\r\n\r\n    /*\r\n     * D3 -komponentin päivitys\r\n     */\r\n    const updateVis = () => {\r\n\r\n        visFunction.current\r\n            .data(data)\r\n            \r\n    }\r\n\r\n\r\n    /*\r\n     * Painikkeiden tapahtumakäsittelijät\r\n     * https://stackoverflow.com/questions/5203407/how-to-detect-if-multiple-keys-are-pressed-at-once-using-javascript\r\n     */\r\n    const keyDownHandler = ({ key }) => {\r\n\r\n        switch(String(key)) {\r\n            case 'ArrowUp':\r\n                dispatch(accelerate({key: 'ArrowUp'}))\r\n                break;\r\n\r\n            case 'ArrowRight':\r\n                dispatch(accelerate({key: 'ArrowRight'}))\r\n                break;\r\n\r\n            case 'ArrowLeft':\r\n                dispatch(accelerate({key: 'ArrowLeft'}))\r\n                break;\r\n\r\n            default:\r\n                // code block\r\n        } \r\n    }\r\n\r\n    const keyUpHandler = ({ key }) => {\r\n\r\n        switch(String(key)) {\r\n            case 'ArrowUp':\r\n                dispatch(slowdown({key: 'ArrowUp'}))\r\n                break;\r\n \r\n            case 'ArrowRight':\r\n                dispatch(slowdown({key: 'ArrowRight'}))\r\n                break;\r\n   \r\n            case 'ArrowLeft':\r\n                dispatch(slowdown({key: 'ArrowLeft'}))\r\n                break;\r\n   \r\n            default:\r\n                // code block\r\n        } \r\n    }\r\n\r\n    useEventListener('keydown', keyDownHandler);\r\n    useEventListener('keyup', keyUpHandler);\r\n\r\n    useEffect(() => {\r\n\r\n        if(data && data.length){\r\n\r\n            if(visFunction.current === null)\r\n                initVis()\r\n            else\r\n                updateVis()\r\n\r\n        }\r\n        \r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(animate())\r\n\r\n    }, [isActive])\r\n\r\n\r\n    /*\r\n     * transform=\"translate(-50 -50) rotate(90, 50, 50) scale(1.0,1.0)\r\n     * transform=\"translate(-5 -5) rotate(0, 5, 5) scale(0.1,0.1)\"\r\n     */\r\n    return (\r\n        <>\r\n            <div style={{border: \"1px solid navy\", margin: \"auto\", maxWidth:\"600px\"}}>\r\n                <svg ref={refElement} id=\"mainSVG\">\r\n                    <defs>\r\n                        <g id=\"mySymbol\">\r\n                            <path \r\n                                id=\"theShip\"\r\n                                d=\"m0,50l50,-50l50,50l-25,0l0,50l-50,0l0,-50l-25,0z\" \r\n                                strokeLinecap=\"null\" \r\n                                strokeLinejoin=\"null\" \r\n                                strokeDasharray=\"null\" \r\n                                strokeWidth=\"0\" \r\n                                fill=\"#000000\"\r\n                            />\r\n                        </g>\r\n                    </defs>\r\n                </svg>\r\n            </div>\r\n            <button onClick={() => dispatch(toggleActiveState())}>\r\n                {isActive?'Pysäytä':'Käynnistä'}\r\n            </button>\r\n            <p>Korjaa: Ei kiihdytä!</p>\r\n        </>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default DynamicAcceleration;","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\advAccelerationReducer.js",["364"],"import {Ship, Vector} from \"../services/vector\";\r\n\r\nfunction getRandomColor() {\r\n\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n\r\n}\r\n\r\nconst getInitialHeight = () => 600\r\nconst getInitialNumberOfParticles = () => 1\r\nconst getInitialRotation = () => 0\r\nconst getInitialWidth = () => 600\r\nconst getInitialXscale = () => 0.25\r\nconst getInitialYscale = () => 0.25\r\n\r\nconst getInitialData = (n, height, width, rotation) => {\r\n\r\n    let data = [];\r\n\r\n    for(var i = 0; i < n; i++){\r\n        data.push(\r\n            new Ship(\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                width,\r\n                height,\r\n                getInitialXscale(),\r\n                getInitialYscale(),\r\n                rotation\r\n            )\r\n        )\r\n    }\r\n\r\n    return data\r\n}\r\n\r\n\r\nconst initialState = {\r\n\r\n    numberOfParticles: getInitialNumberOfParticles(),\r\n    data: getInitialData(getInitialNumberOfParticles(),getInitialHeight(),getInitialWidth(),getInitialRotation()),\r\n    isActive: false,\r\n    thrust: new Vector(0,0),\r\n    step: {min: 0.0, val: 0.1, max: 1.0, step: 0.01},\r\n    thrusting: false,\r\n    turningLeft: false,\r\n    turningRight: false,\r\n    height: getInitialHeight(),     // Tulostukseen käytettävän SVG -elementin korkeus\r\n    width: getInitialWidth(),       // Tulostukseen käytettävän SVG -elementin leveys\r\n    xScale: getInitialXscale(),     // Alusta esittävän nuolen leveyden skaalaus\r\n    yScale: getInitialYscale()                     // Alusta esittävän nuolen korkeuden skaalaus\r\n}\r\n\r\n\r\n/*\r\n *\r\n */\r\nconst calculateNewState = (state) => {\r\n\r\n    let angle = state.turningLeft\r\n                ? -0.05\r\n                : state.turningRight\r\n                    ? 0.05\r\n                    : 0    \r\n\r\n    let newThrust \r\n\r\n    let newData = state.data.map(p => {\r\n\r\n        let bar = p.setRotation(angle)  // Aluksen nokkaa käännetään aina kun painike pohjassa\r\n\r\n        newThrust =  new Vector(0,0)\r\n\r\n        /*\r\n         * Siirretäänkö alusta\r\n         */\r\n        if(state.thrusting)\r\n            newThrust = newThrust.setLength(state.step.val)\r\n    \r\n        newThrust = newThrust.setAngle(bar.getRotation())\r\n\r\n        return bar.accelerate(newThrust)\r\n    })\r\n\r\n\r\n    return {\r\n        ...state,\r\n        data: newData,\r\n        thrust: newThrust\r\n    }\r\n}\r\n\r\n/*\r\n * @todo: Jos jompikumpi ArrowLeft tai ArrowRight on painettuna, toisen painikkeen\r\n *        painamiseen ei tällöin reagoida\r\n */\r\nconst thrustAccelerate = (state, data) => {\r\n    \r\n    return {\r\n        ...state,\r\n        thrusting: data.key==='ArrowUp'?true:state.thrusting,\r\n        turningLeft:  data.key==='ArrowLeft'?true:state.turningLeft,\r\n        turningRight:  data.key==='ArrowRight'?true:state.turningRight,\r\n        isActive: true\r\n    }\r\n}\r\n\r\n/*\r\n * N O L L A A   A I N O A S T A A N    V A P A U T E T T U !\r\n */\r\nconst thrustSlowdown = (state, data) => {\r\n    \r\n    return {\r\n        ...state,\r\n        thrusting: data.key==='ArrowUp'?false:state.thrusting,\r\n        turningLeft:  data.key==='ArrowLeft'?false:state.turningLeft,\r\n        turningRight:  data.key==='ArrowRight'?false:state.turningRight,\r\n        isActive: false\r\n    }\r\n}\r\n\r\n\r\n/*\r\n * A C T I O N S\r\n */\r\n\r\nexport const accelerate = (val) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch({\r\n            type: 'THRUST_ACCELERATE',\r\n            data: val\r\n        })\r\n    }    \r\n\r\n}\r\n\r\n\r\n/*\r\n * Animaation pyöritys\r\n * - alkuosa nollaa timerin, mikäli animaatio on ollut pyörimässä, pysäytetään se\r\n * - mikäli animaation halutaan käyvän (isActive === true), käynnistetään \r\n *   timeri, joka pyörittää seuraavan  aseman laskevaa tilapäivitystä\r\n * - mikäli action-kutsu tulee sen jälkeen, kun isActive -tila on vaihtunut\r\n *   suoritetaan vain alkuosa, eli pyörivän timerin sulkeminen...\r\n */\r\nexport const animate = () => {\r\n\r\n    return (dispatch, state) => {\r\n\r\n        /*\r\n         * Napataan ajastimen id talteen, jotta sille voidaan antaa pysäytyskäsky\r\n         */\r\n        let intervalId;\r\n\r\n        /*\r\n         * Voidaanko animaatio käynnistää?\r\n         * - ei liity ajastimeen, vaan siihen onko käyttäjä käynnistänyt toiminnon\r\n         */\r\n        let isActive = state().acceleration.isActive;\r\n\r\n        /*\r\n         * Onko ajastin päällä.\r\n         * - animaation sujuvuuden kannalta aikaisempi kierros pitää tarvittaessa keskeyttää?\r\n         */\r\n        let timerRunning = state().timer.running;\r\n        let timerId = state().timer.id;\r\n\r\n        if(timerRunning) {\r\n            clearInterval(timerId);\r\n            dispatch({type: 'TIMER_CLEAR'});\r\n        } \r\n\r\n        if(isActive){\r\n\r\n            intervalId = setInterval(() => {\r\n\r\n                dispatch({\r\n                    type: 'THRUST_ANIMATE',\r\n                    data: {}\r\n                })\r\n    \r\n            }, 25)\r\n\r\n                    // kirjataan timerin käynnistys muistiin\r\n            dispatch({\r\n                type: 'TIMER_START',\r\n                data: {\r\n                    id: intervalId\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const kaannaOikea = () => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type: 'THRUST_ACCELERATE',\r\n            data: {key: 'ArrowRight'}\r\n        })\r\n\r\n        dispatch({\r\n            type: 'THRUST_ANIMATE',\r\n            data: {}\r\n        })\r\n\r\n        dispatch({\r\n            type: 'THRUST_SLOWDOWN',\r\n            data: {key: 'ArrowRight'}\r\n        })\r\n           \r\n    }\r\n}\r\n\r\nexport const kaannaVasen = () => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type: 'THRUST_ACCELERATE',\r\n            data: {key: 'ArrowLeft'}\r\n        })\r\n\r\n        dispatch({\r\n            type: 'THRUST_ANIMATE',\r\n            data: {}\r\n        })\r\n\r\n        dispatch({\r\n            type: 'THRUST_SLOWDOWN',\r\n            data: {key: 'ArrowLeft'}\r\n        })\r\n           \r\n    }\r\n}\r\n\r\nexport const kiihdyta = () => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type: 'THRUST_ACCELERATE',\r\n            data: {key: 'ArrowUp'}\r\n        })\r\n        \r\n        dispatch({\r\n            type: 'THRUST_ANIMATE',\r\n            data: {}\r\n        })\r\n\r\n        dispatch({\r\n            type: 'THRUST_SLOWDOWN',\r\n            data: {key: 'ArrowUp'}\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const liikuta = () => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type: 'THRUST_ANIMATE',\r\n            data: {}\r\n        })\r\n\r\n    }\r\n}\r\n\r\n/*\r\n * Kytketään animaation käynnistävä muuttuja joko päälle tai pois päältä\r\n * - muuttuja: isActive\r\n */\r\nexport const toggleActiveState = () => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type: 'THRUST_TOGGLE_ACTIVE',\r\n            data: {}\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const slowdown = (val) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch({\r\n            type: 'THRUST_SLOWDOWN',\r\n            data: val\r\n        })\r\n    }    \r\n\r\n}\r\n\r\n/*\r\n * Step määrittää kiihtyvyyden säätämisen perusyksikön, siis kuinka paljon\r\n * aluksen vauhti kiihtuu, kun \"kaasua painetaan yhden kerran\"\r\n */\r\nexport const updateStepValue= (val) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch({\r\n            type: 'THRUST_SET_STEP_VALUE',\r\n            data: val\r\n        })\r\n    }    \r\n\r\n}\r\n\r\n\r\n\r\nconst advancedAccelerationReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'THRUST_ANIMATE':\r\n\r\n            return calculateNewState(state);\r\n\r\n        case 'THRUST_ACCELERATE':\r\n\r\n            return thrustAccelerate(state, action.data);\r\n\r\n        case 'THRUST_PUSH_ONE_ON':\r\n\r\n            return {\r\n                ...state,\r\n                thrusting: true\r\n            };\r\n\r\n        case 'THRUST_ROTATE_ONE_OFF':\r\n\r\n            return {\r\n                ...state,\r\n                isActive: false\r\n            };\r\n\r\n        case 'THRUST_SLOWDOWN':\r\n\r\n            return thrustSlowdown(state, action.data);\r\n\r\n        case 'THRUST_SET_STEP_VALUE':\r\n\r\n            const updatedStep = {\r\n                ...state.step,\r\n                val: action.data.stepValue\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                step: updatedStep\r\n            };\r\n\r\n        case 'THRUST_TOGGLE_ACTIVE':\r\n\r\n            const newActiveState = !state.isActive\r\n\r\n            return {\r\n                ...state,\r\n                isActive: newActiveState\r\n            }\r\n\r\n        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default advancedAccelerationReducer;\r\n","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\d3Acceleration.js",["365","366","367","368"],"import * as d3 from \"d3\";\r\nimport { \r\n    select\r\n} from \"d3\";\r\nimport { accelerate } from \"../../reducers/advAccelerationReducer\";\r\n\r\nexport const d3Acceleration = () => {\r\n\r\n    let svg;\r\n    let gElem;\r\n\r\n    let gCenterOfShip;   // Tapahtumapaikka \r\n    let gRotationOfShip; // Kuinka paljon alusta käännetään\r\n    let gOriginOfShip;   // Aluksen keskipisteen siirto pyörittämisen origoon\r\n    let gScalingOfShip;  // Skaalataan alusta esittävä kuva haluttuun kokoon\r\n    let arrow;\r\n\r\n    let data = []\r\n    let width = 200;\r\n    let height = 200;\r\n    let margin = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n    let widthOfDefsElement = 100;\r\n    let heightOfDefsElement = 100;\r\n    let xScale = 1;\r\n    let yScale = 1;\r\n\r\n    let updateData;\r\n    let updateHeight;\r\n    let updateWidth;\r\n\r\n\r\n    /*\r\n     * Funktiot joiden avulla:\r\n     * - määritetään aluksen sijaintipaikka\r\n     * - haluttu kierto\r\n     * - piirrettävän kuvan skaalaus haluttuun kokoon\r\n     */\r\n    const getCenterOfShip = (d) => {\r\n\r\n//console.log(\"............ CENTER ..................\")\r\n//console.log(d.getVector().getX())\r\n\r\n        return `translate(${d.getVector().getX()},${d.getVector().getY()})`\r\n    }\r\n\r\n    const getRotationOfShip = (d) => {\r\n\r\n        let asDegrees = ((d.getRotation()) * 180 / Math.PI) + 90\r\n\r\n        return `rotate(${asDegrees})`\r\n    }\r\n\r\n    const getShipCenterToOrigo = (d) => {\r\n        let xTranslate = (widthOfDefsElement / -2) * xScale\r\n        let yTranslate = (heightOfDefsElement / -2) * yScale\r\n\r\n        return `translate(${xTranslate},${yTranslate})`\r\n    }\r\n\r\n    function chart(selection){\r\n\r\n        /*\r\n         *\r\n         */\r\n        selection.each(function(){\r\n\r\n            svg = d3\r\n                .select(this)\r\n                //.append('svg')\r\n                .attr(\"viewBox\", [0,0, width, height])\r\n\r\n            gElem = svg\r\n                .append('g')\r\n                    .attr('transform', `translate(${width/2},${height/2})`)\r\n\r\n\r\n\r\n            \r\n            gCenterOfShip = gElem\r\n                .selectAll('.ship')\r\n                .data(data)\r\n                .enter()\r\n                .append('g')\r\n                    .attr('transform', d => getCenterOfShip(d))\r\n                    .attr('class','ship')\r\n\r\n            gRotationOfShip = gCenterOfShip\r\n                .append('g')\r\n                .attr('transform', d => getRotationOfShip(d))  \r\n                \r\n            gOriginOfShip = gRotationOfShip\r\n                .append('g')\r\n                .attr('transform', d => getShipCenterToOrigo(d)) \r\n\r\n            gScalingOfShip = gOriginOfShip\r\n                .append('g')\r\n                .attr(\"transform\", `scale(${xScale} ${yScale})`)\r\n\r\n            arrow = gScalingOfShip\r\n                .append(\"use\")\r\n                    .attr(\"href\",\"#mySymbol\")\r\n                    .attr(\"id\",\"fooBar\")\r\n\r\n                    gElem\r\n                    .append(\"line\")\r\n                    .attr(\"x1\", 0)\r\n                    .attr(\"y1\", 0)\r\n                    .attr(\"x2\", 300)\r\n                    .attr(\"y2\", 0)\r\n                    .style(\"stroke\", \"red\")\r\n    \r\n                gElem\r\n                    .append(\"line\")\r\n                    .attr(\"x1\", 0)\r\n                    .attr(\"y1\", 0)\r\n                    .attr(\"x2\", 0)\r\n                    .attr(\"y2\", 300)\r\n                    .style(\"stroke\", \"red\")\r\n    \r\n            \r\n\r\n            updateData = function() {\r\n\r\n                gCenterOfShip\r\n                    .data(data)\r\n                        .attr('transform', d => getCenterOfShip(d))\r\n\r\n                gRotationOfShip\r\n                    .data(data)\r\n                        .attr('transform', d => getRotationOfShip(d))  \r\n\r\n                gOriginOfShip\r\n                    .data(data)\r\n                        .attr('transform', d => getShipCenterToOrigo(d));\r\n\r\n            }\r\n\r\n            updateHeight = function() {}\r\n            updateWidth = function() {}\r\n\r\n        })\r\n    }\r\n\r\n    chart.data = function(val){\r\n\r\n        if(!arguments.length) return data;\r\n\r\n        data = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.height = function(val){\r\n\r\n        if(!arguments.length) return height;\r\n\r\n        height = val;\r\n\r\n        if(typeof updateHeight === 'function')\r\n            updateHeight();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.width = function(val){\r\n\r\n        if(!arguments.length) return width;\r\n\r\n        width = val;\r\n\r\n        if(typeof updateWidth === 'function')\r\n            updateWidth();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    /*\r\n     * Minkä verran alusta esittävän nuolen leveyttä skaalataan\r\n     */\r\n    chart.xScale = function(val){\r\n\r\n        if(!arguments.length) return xScale;\r\n\r\n        xScale = val;\r\n\r\n        return chart\r\n\r\n    }\r\n\r\n    /*\r\n     * Minkä verran alusta esittävän nuolen leveyttä skaalataan\r\n     */\r\n    chart.yScale = function(val){\r\n\r\n        if(!arguments.length) return yScale;\r\n\r\n        yScale = val;\r\n\r\n        return chart\r\n\r\n    }\r\n\r\n    return chart\r\n\r\n}","C:\\Users\\raimo\\Documents\\math\\src\\hooks\\useEventListener.js",["369"],"import {useEffect, useRef} from 'react'\r\n\r\n/*\r\n * https://usehooks.com/useEventListener/\r\n */\r\nconst useEventListener = (eventName, handler, element = window) => {\r\n\r\n    const savedHandler = useRef();\r\n\r\n    useEffect(() => {\r\n        savedHandler.current = handler;\r\n    }, [handler]);\r\n\r\n    useEffect(() => {\r\n\r\n        /*\r\n         * Varmistetaan, että elementti tukee addEventListner -toimintoa\r\n         */\r\n        const isSupported = element && element.addEventListener;\r\n\r\n        if(!isSupported) return;\r\n\r\n        /*\r\n         * Luodaan tapahtumankäsittelijä joka kutsuu ref:iin\r\n         * tallettua callback-funktiota\r\n         */\r\n        const eventListener = event => savedHandler.current(event);\r\n\r\n        element.addEventListener(eventName, eventListener)\r\n\r\n        /*\r\n         * Poistetaan tapahtumankäsittelijä sivulta poistuttaessa?\r\n         */\r\n        return () => {\r\n            element.removeEventListener(eventName, eventListener);\r\n        }\r\n\r\n    }, [eventName])\r\n\r\n}\r\n\r\nexport default useEventListener;","C:\\Users\\raimo\\Documents\\math\\src\\layout\\tyomaa\\index.js",["370","371","372","373"],"import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport { select } from \"d3\";\r\n\r\nconst TestArea = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            hei\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default TestArea;","C:\\Users\\raimo\\Documents\\math\\src\\iconComponents\\Hupu.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\iconComponents\\IlotulitusRaketti.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\layout\\planeetat\\index.js",["374","375","376"],"import React, {useEffect, useRef} from 'react';\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport SolarSystem from \"../../components/gravity\";\r\nimport Toolbar from \"../../components/gravity\";\r\n\r\nimport './planeetat.css';\r\n\r\nconst Gravity = () => {\r\n\r\n    return (\r\n        <Container className=\"planeetatContainer\">\r\n            <Row>\r\n                <Col sm={4} md={3} className=\"bar\">1 of 3</Col>\r\n                <Col sm={8} md={9} className=\"foo\">\r\n                    <SolarSystem />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n    \r\n};\r\n\r\nexport default Gravity;","C:\\Users\\raimo\\Documents\\math\\src\\components\\gravity\\index.js",["377","378"],"import React, {useEffect, useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {liikuta} from \"../../reducers/gravitationReducer\";\r\n\r\nimport {select} from \"d3\";\r\n\r\nimport {D3Gravity} from \"./D3Gravity\";\r\n\r\n\r\nconst SolarSystem = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const refElement = useRef(null);\r\n    const visFunction = useRef(null);\r\n\r\n    const {data, height, isActive, width} = useSelector(state => state.gravitation);\r\n\r\n    /*\r\n     * d3 -komponentin alustus\r\n     */\r\n    const initVis = () => {\r\n\r\n        visFunction.current = D3Gravity()\r\n            .data(data)\r\n            .height(height)\r\n            .width(width)\r\n\r\n        select(refElement.current)\r\n            .call(visFunction.current)\r\n            \r\n    }\r\n\r\n    /*\r\n     * D3 -komponentin päivitys\r\n     */\r\n    const updateVis = () => {\r\n\r\n        visFunction.current\r\n            .data(data)\r\n            \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(data && data.length){\r\n\r\n            if(visFunction.current === null)\r\n                initVis()\r\n            else\r\n                updateVis()\r\n\r\n        }\r\n        \r\n    }, [data])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{border: \"1px solid navy\", margin: \"auto\", maxWidth:\"600px\"}}>\r\n                <svg ref={refElement} id=\"mainSVG\">\r\n                </svg>\r\n            </div>\r\n            <button onClick={() => dispatch(liikuta())}>Liikuta</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SolarSystem;","C:\\Users\\raimo\\Documents\\math\\src\\components\\gravity\\D3Gravity.js",["379","380","381"],"import * as d3 from \"d3\";\r\nimport { \r\n    select\r\n} from \"d3\";\r\nimport gravitationReducer from \"../../reducers/gravitationReducer\";\r\n\r\nexport const D3Gravity = () => {\r\n\r\n    let svg;\r\n    let gElem;\r\n    let circles;\r\n\r\n    let data = []\r\n    let width = 200;\r\n    let height = 200;\r\n    let margin = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n    let updateData;\r\n    let updateHeight;\r\n    let updateWidth;\r\n\r\n    function chart(selection){\r\n\r\n        /*\r\n         *\r\n         */\r\n        selection.each(function(){\r\n\r\n            svg = d3\r\n                .select(this)\r\n                //.append('svg')\r\n                .attr(\"viewBox\", [0,0, width, height])\r\n\r\n            gElem = svg\r\n                .append('g')\r\n                .attr('transform', ` translate(${width/2},${height/2})`)\r\n\r\n            circles = gElem\r\n                .selectAll(\"circle\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                    .style(\"stroke\", \"none\")\r\n                    .style(\"fill\", d => {console.log(d.getColor()); return d.getColor()})\r\n                    .attr(\"r\", d => d.getRadius())\r\n                    .attr(\"cx\", d => d.getVector().getX())\r\n                    .attr(\"cy\", d => d.getVector().getY())\r\n\r\n            updateData = function() {\r\n\r\n                circles\r\n                    .data(data)\r\n                        .attr(\"r\", d => d.getRadius())\r\n                        .attr(\"cx\", d => d.getVector().getX())\r\n                        .attr(\"cy\", d => d.getVector().getY())\r\n\r\n            }\r\n\r\n            updateHeight = function() {}\r\n            updateWidth = function() {}\r\n\r\n        })\r\n    }\r\n\r\n    chart.data = function(val){\r\n\r\n        if(!arguments.length) return data;\r\n\r\n        data = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.height = function(val){\r\n\r\n        if(!arguments.length) return height;\r\n\r\n        height = val;\r\n\r\n        if(typeof updateHeight === 'function')\r\n            updateHeight();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.width = function(val){\r\n\r\n        if(!arguments.length) return width;\r\n\r\n        width = val;\r\n\r\n        if(typeof updataWidth === 'function')\r\n            updateWidth();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    return chart\r\n\r\n}","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\gravitationReducer.js",["382","383","384","385","386"],"import {CelestialBody, Vector} from \"../services/vector\";\r\n\r\nfunction getRandomColor() {\r\n\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n\r\n}\r\n\r\nconst getInitialHeight = () => 600\r\nconst getInitialNumberOfParticles = () => 1\r\nconst getInitialRotation = () => 0\r\nconst getInitialWidth = () => 600\r\n\r\n/*\r\n *  x,y, speed, direction, radius, name, mass = 1\r\n */\r\nconst getInitialData = () => {\r\n\r\n    let sun = new CelestialBody(0,0, 0, 0, 15, \"sun\", 20000, \"#f7e617\");\r\n    let earth = new CelestialBody(200, 0, 10, -Math.PI / 2, 5, \"earth\", 1, \"#3f67cb\");\r\n    let jupiter = new CelestialBody(250, 150, 20, -Math.PI , 6, \"jupiter\", 1, \"#b400b9\");\r\n\r\n    return [sun, earth];\r\n}\r\n\r\nconst initialState = {\r\n\r\n    data: getInitialData(),\r\n    isActive: false,\r\n    height: getInitialHeight(),\r\n    width: getInitialWidth()\r\n}\r\n\r\n\r\nconst calculateNewState = (state) => {\r\n\r\n    let sun = state.data.filter(d => d.getName() === \"sun\");\r\n    let planets =  state.data.filter(d => d.getName() !== \"sun\");\r\n\r\n    let updatedPlanets = planets.map(cb => cb.update(sun[0]))\r\n\r\n    let newData = sun.concat(updatedPlanets)\r\n    \r\n    return {\r\n        ...state,\r\n        data: newData\r\n    }\r\n}\r\n/* \r\n * A C T I O N S\r\n */\r\nexport const liikuta = () => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({\r\n            type: 'GRAVITY_ANIMATE',\r\n            data: {}\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nconst gravitationReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'GRAVITY_ANIMATE':\r\n\r\n            return calculateNewState(state)\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default gravitationReducer;","C:\\Users\\raimo\\Documents\\math\\src\\components\\navbar\\index.js",["387"],"import React, {useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport {IconContext} from \"react-icons\";\r\n\r\n\r\nimport './navbar.css'\r\n\r\nconst Navbar = () => {\r\n\r\n    const [sidebar, setSidebar] = useState(false)\r\n\r\n    const {pages} = useSelector(state => state.navigation);\r\n\r\n    const showSidebar = () => {\r\n        setSidebar(!sidebar)\r\n    }\r\n\r\n\r\n    const padding = {\r\n        padding: 5\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{color: '#fff'}}>\r\n\r\n                <div className=\"navbar\">\r\n                    <Link to=\"#\" className=\"menu-bars\">\r\n                        <FaIcons.FaBars onClick={showSidebar}/>\r\n                    </Link>\r\n                </div>\r\n\r\n                <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n\r\n                    <ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n\r\n                        <li className=\"navbar-toggle\">\r\n                            <Link to=\"#\" className=\"menu-bars\">\r\n                                <AiIcons.AiOutlineClose />\r\n                            </Link>\r\n                        </li>\r\n\r\n                        {\r\n                            pages.map((item, index) => {\r\n                                return (\r\n                                    <li key={index} className={item.cName}>\r\n                                        <Link to={item.path}>\r\n                                            {item.icon}\r\n                                            <span className=\"navbar-span\">\r\n                                                {item.title}\r\n                                            </span>\r\n                                            \r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </ul>\r\n\r\n                </nav>\r\n\r\n            </IconContext.Provider>\r\n\r\n      </>\r\n    );\r\n};\r\n\r\n/*\r\n\r\n            <Link style={padding} to=\"/\">Home</Link>\r\n            <Link style={padding} to=\"/flies\">Kärpäset</Link>\r\n            <Link style={padding} to=\"/vector\">Ilotulitus</Link>\r\n            <Link style={padding} to=\"/acceleration\">Acceleration</Link>\r\n            <Link style={padding} to=\"/gravity\">Gravity</Link>\r\n            <Link style={padding} to=\"/testi\">Testarea</Link>\r\n\r\n*/\r\n\r\nexport default Navbar;","C:\\Users\\raimo\\Documents\\math\\src\\reducers\\navigationReducer.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\toolbar.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\debugControls.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\meterPanel.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\d3Components\\gauge\\index.js",["388","389","390"],"import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport {select} from \"d3\";\r\n\r\nimport {D3Compass} from \"./d3Compass\"\r\n\r\nimport './gauge.css'\r\n\r\n/*\r\n * \r\n */\r\nconst Compass = () => {\r\n\r\n    const refElement = useRef(null);\r\n    const visFunction = useRef(null);\r\n\r\n    const [data, setData] = useState([0])\r\n    const [height, setHeight] = useState(150)\r\n    const [width, setWidth] = useState(150)\r\n\r\n    const initVis = () => {\r\n\r\n        visFunction.current = D3Compass()\r\n            .data(data)\r\n            .height(height)\r\n            .width(width)\r\n\r\n        select(refElement.current)\r\n            .call(visFunction.current)\r\n            \r\n    }\r\n\r\n    /*\r\n     * D3 -komponentin päivitys\r\n     */\r\n    const updateVis = () => {\r\n\r\n        visFunction.current\r\n            .data(data)\r\n            \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(data && data.length){\r\n\r\n            if(visFunction.current === null)\r\n                initVis()\r\n            \r\n            else \r\n                updateVis()\r\n        \r\n        }\r\n        \r\n    }, [data])\r\n\r\n    let handleChange = (event) => {\r\n        setData([event.target.value])\r\n    }\r\n\r\n\r\n\r\n    /*\r\n<input type=\"range\" min=\"0\" max=\"360\" value=\"0\" id=\"slider\" oninput=\"updateAngle(this.value)\">\r\n     */\r\n    return (\r\n        <>\r\n            <input \r\n                type=\"range\" \r\n                min=\"0\" \r\n                max=\"360\" \r\n                value={data[0]}\r\n                onChange={handleChange}\r\n            />\r\n            <div ref={refElement} style={{maxWidth: \"500px\", margin: \"10px 10px\"}}>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Compass;",["391","392"],"C:\\Users\\raimo\\Documents\\math\\src\\d3Components\\gauge\\d3Compass.js",["393","394","395","396"],"import * as d3 from \"d3\";\r\n\r\n/*\r\n * http://bl.ocks.org/msqr/3202712\r\n */\r\nexport const D3Compass = () => {\r\n\r\n    let svg;\r\n    let gElem;\r\n    let arcs;\r\n    let lg;\r\n    let pg;\r\n\r\n    let data = []\r\n    let width = 200;\r\n    let height = 200;\r\n    let margin = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n    let arc;\r\n\r\n    let labelInset = 10;\r\n\r\n    let maxAngle = 360;    // Piirretään koko kehä\r\n    let minAngle = 0;\r\n\r\n    let maxValue;           // Kehän tekstien määrittämisen apuna...\r\n    let minValue = 0;\r\n\r\n    let needlePath;\r\n\r\n\r\n    let r;\r\n    let range;\r\n    let ringInset\r\n    let ringWidth;\r\n    let scale; // a linear scale that maps domain values to a percent from 0..1\r\n\r\n\r\n\tlet ticks;\r\n    let tickData;\r\n    let tickLabels = [\"N\",\"E\",\"S\",\"w\"];\r\n    let transitionMs = 4000;\r\n\r\n\r\n\r\n    let updateData;\r\n    let updateHeight;\r\n    let updateWidth;\r\n\r\n    /*\r\n     * range = config.maxAngle - config.minAngle;\r\n     */\r\n    let configure = () => {\r\n\r\n        let majorTicks = tickLabels.length;\r\n\r\n        range = maxAngle - minAngle;\r\n\r\n        // Ympyrän kehä\r\n        r = Math.floor(Math.min(width, height) * 0.8) / 2;\r\n        ringInset = Math.floor(Math.min(width, height) * 0.1);\r\n        ringWidth =  Math.floor(Math.min(width, height) * 0.06);\r\n\r\n        // Kompassinuoli\r\n        let arrowWHalf =  Math.floor(Math.min(width, height) * 0.03);\r\n        let arrowLen =  Math.floor(Math.min(width, height) * 0.20)\r\n        needlePath = `M 0,0 L 0,-${arrowWHalf} L ${arrowLen},0 L 0,${arrowWHalf} Z`\r\n\r\n        console.log(\"wid\", width)\r\n\r\n        // a linear scale that maps domain values to a percent from 0..1\r\n        maxValue = majorTicks - 1\r\n        let ylaraja = maxValue / (maxValue + 1)\r\n        scale = d3.scaleLinear()\r\n            .range([0, ylaraja])\r\n            .domain([minValue, maxValue])\r\n\r\n        ticks = scale.ticks(majorTicks);\r\n\r\n        tickData = d3.range(majorTicks)\r\n            .map(function() {\r\n                return 1/majorTicks;\r\n            });\r\n\r\n\r\n        arc = d3\r\n            .arc()\r\n            .innerRadius(r - ringWidth - ringInset)\r\n            .outerRadius(r - ringInset)\r\n            .startAngle(function(d, i) {\r\n\t\t\t\tvar ratio = d * i;\r\n\t\t\t\treturn deg2rad(minAngle + (ratio * range));\r\n\t\t\t})\r\n\t\t\t.endAngle(function(d, i) {\r\n\t\t\t\tvar ratio = d * (i+1);\r\n\t\t\t\treturn deg2rad(minAngle + (ratio * range));\r\n            });\r\n            \r\n\r\n    }\r\n\r\n    let deg2rad = (deg) => {\r\n\t\treturn deg * Math.PI / 180;\r\n    }\r\n    \r\n    /*\r\n     * How can I draw compass shape in d3.js and colour each triangle differently?\r\n     * https://stackoverflow.com/questions/56716395/how-can-i-draw-compass-shape-in-d3-js-and-colour-each-triangle-differently\r\n     */\r\n    let drawNeedle = (value) => {\r\n\r\n        let angle = parseInt(value);\r\n\r\n        let data = [\r\n            { angle: angle, color: 'black'}, \r\n            { angle: (180 + angle) % 360, color: 'red'}\r\n        ];\r\n\r\n        let paths = pg\r\n            .selectAll('path')\r\n            .data(data);\r\n\r\n        paths\r\n            .enter()\r\n            .append('path')\r\n                .attr('d', needlePath)\r\n            .merge(paths)\r\n                .style('fill', d => d.color)\r\n                .attr('transform', d => `rotate(${d.angle})`);\r\n\r\n        paths.exit().remove();\r\n\r\n    }\r\n\r\n    function chart(selection){\r\n\r\n        /*\r\n         *\r\n         */\r\n        selection.each(function(){\r\n\r\n            configure();\r\n\r\n            svg = d3\r\n                .select(this)\r\n                .append('svg')\r\n                .attr(\"viewBox\", [0,0, width, height])\r\n\r\n            gElem = svg\r\n                .append('g')\r\n                .attr('transform', \"translate(\" + ((width) / 2) + \", \" + ((height) / 2) + \")\");\r\n\r\n            arcs = gElem\r\n                .append('g')\r\n                .selectAll('path')\r\n                .data(tickData)\r\n                .enter()\r\n                .append('path')\r\n                    .attr('fill', function(d, i) {\r\n                        return i % 2 == 0 ? \"navy\" : \"red\"\r\n                    })\r\n                    .attr('d', arc);\r\n\r\n            lg = gElem\r\n                .append('g')\r\n                    .attr('class', 'label');\r\n\r\n            lg\r\n                .selectAll('text')\r\n\t\t\t\t.data(ticks)\r\n                .enter()\r\n                .append('text')\r\n                    .attr('transform', function(d, i) {\r\n\r\n                        var ratio = scale(d);\r\n                        var newAngle = minAngle + (ratio * range);\r\n\r\n                        return `rotate(${newAngle}) translate(0, ${labelInset - r})`;\r\n                    })\r\n                .text((d, i) => tickLabels[i]);\r\n\r\n            // - kompassineula\r\n            pg = gElem.append('g');\r\n            drawNeedle(0)\r\n\r\n            updateData = function() {\r\n                drawNeedle(data[0])\r\n            }\r\n\r\n            updateHeight = function() {}\r\n            updateWidth = function() {}\r\n\r\n        })\r\n    }\r\n\r\n    chart.data = function(val){\r\n\r\n        if(!arguments.length) return data;\r\n\r\n        data = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.height = function(val){\r\n\r\n        if(!arguments.length) return height;\r\n\r\n        height = val;\r\n\r\n        if(typeof updateHeight === 'function')\r\n            updateHeight();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.width = function(val){\r\n\r\n        if(!arguments.length) return width;\r\n\r\n        width = val;\r\n\r\n        if(typeof updataWidth === 'function')\r\n            updateWidth();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    return chart\r\n\r\n}","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\compass.js",["397"],"import React, {useEffect, useRef} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {select} from \"d3\";\r\n\r\nimport {D3Compass} from \"../../d3Components/gauge/d3Compass\";\r\n\r\nconst Compass = () => {\r\n\r\n    const refElement = useRef(null);\r\n    const visFunction = useRef(null);\r\n\r\n    const visHeight = 150;\r\n    const visWidth = 150;\r\n\r\n    /*\r\nfunction radians_to_degrees(radians)\r\n{\r\n  var pi = Math.PI;\r\n  return radians * (180/pi);\r\n}\r\n\r\n    */\r\n\r\n    const {rotation} = useSelector(state => {\r\n\r\n        return {\r\n            rotation: state.acceleration.data[0].getRotation() * (180 / Math.PI)\r\n        }\r\n        \r\n    })\r\n\r\n    const initVis = () => {\r\n\r\n        visFunction.current = D3Compass()\r\n            .data([rotation])\r\n            .height(visHeight)\r\n            .width(visWidth)\r\n\r\n        select(refElement.current)\r\n            .call(visFunction.current)\r\n            \r\n    }\r\n\r\n\r\n    /*\r\n     * D3 -komponentin päivitys\r\n     */\r\n    const updateVis = () => {\r\n\r\n        visFunction.current\r\n            .data([rotation])\r\n            \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(visFunction.current === null)\r\n            initVis()\r\n        else \r\n            updateVis()\r\n        \r\n    \r\n        \r\n    }, [rotation])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div ref={refElement} style={{maxWidth: \"500px\", margin: \"10px 10px\"}}>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Compass;","C:\\Users\\raimo\\Documents\\math\\src\\components\\acceleration\\settingsPanel.js",["398","399"],"import React  from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport styled from 'styled-components';\r\n\r\nimport {updateStepValue} from \"../../reducers/advAccelerationReducer\";\r\n\r\nimport Slider from \"../../styledComponents/slider/\"\r\n\r\nimport './acceleration.css';\r\n\r\nconst SettingsPanel = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {step} = useSelector(state => state.acceleration);\r\n\r\n    let handleStepChange = (event) => {\r\n        //dispatch(updateStepValue({stepValue: parseInt(event.target.value)}))\r\n        //setValue(parseInt(event.target.value))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Slider\r\n                changeHandler = {(value) => {\r\n                    dispatch(updateStepValue({stepValue: parseFloat(value)}))\r\n                }}\r\n                color=\"#0074D9\"\r\n                step={step.step}\r\n                minValue = {step.min}\r\n                value = {step.val}\r\n                maxValue = {step.max}\r\n                name = \"Step\"\r\n                id = \"step\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SettingsPanel;","C:\\Users\\raimo\\Documents\\math\\src\\d3Components\\slider\\index.js",["400","401","402","403"],"import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport {select} from \"d3\";\r\n\r\nimport {D3Slider} from \"./d3Slider\"\r\n\r\nimport './slider.css'\r\n\r\n\r\nconst Slider = () => {\r\n\r\n    const [data, setData] = useState([0, 0.005, 0.01, 0.015, 0.02, 0.025])\r\n    const [height, setHeight] = useState(200)\r\n    const [width, setWidth] = useState(300)   \r\n\r\n    const refElement = useRef(null);\r\n    const visFunction = useRef(null);\r\n\r\n\r\n    const initVis = () => {\r\n\r\n        visFunction.current = D3Slider()\r\n            .data(data)\r\n            .height(height)\r\n            .width(width)\r\n\r\n        select(refElement.current)\r\n            .call(visFunction.current)\r\n            \r\n    }\r\n\r\n    /*\r\n     * D3 -komponentin päivitys\r\n     */\r\n    const updateVis = () => {\r\n\r\n        visFunction.current\r\n            .data(data)\r\n            \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(data && data.length){\r\n\r\n            if(visFunction.current === null)\r\n                initVis()\r\n            \r\n            else \r\n                updateVis()\r\n        \r\n        }\r\n        \r\n    }, [data])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div ref={refElement} style={{maxWidth: \"500px\", margin: \"10px 10px\"}}>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Slider;",["404","405"],"C:\\Users\\raimo\\Documents\\math\\src\\d3Components\\slider\\d3Slider.js",["406"],"import * as d3 from \"d3\";\r\n\r\n/*\r\n * https://bl.ocks.org/johnwalley/e1d256b81e51da68f7feb632a53c3518\r\n */\r\nexport const D3Slider = () => {\r\n\r\n    let svg;\r\n    let gElem;\r\n\r\n    let data = []\r\n    let width = 200;\r\n    let height = 200;\r\n    let margin = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n    let xTranslate = 0;\r\n    let yTranslate = 0;\r\n\r\n\r\n    let updateData;\r\n    let updateHeight;\r\n    let updateWidth;\r\n\r\n\r\n    function chart(selection){\r\n\r\n        /*\r\n         *<circle cx=\"150\" cy=\"100\" r=\"80\" fill=\"green\" />\r\n\r\n  <text x=\"150\" y=\"125\" font-size=\"60\" text-anchor=\"middle\" fill=\"white\">SVG</text>\r\n         */\r\n        selection.each(function(){\r\n\r\n            svg = d3\r\n                .select(this)\r\n                .append('svg')\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                //.attr(\"viewBox\", [0,0, width, height])\r\n\r\n            gElem = svg\r\n                .append('g')\r\n                .attr('transform',`translate(${xTranslate},${yTranslate})`);\r\n\r\n            gElem\r\n                .append('rect')\r\n                    .attr(\"x\",0)\r\n                    .attr(\"y\",0)\r\n                    .attr(\"width\",\"100%\")\r\n                    .attr(\"height\", \"100%\")\r\n                    .attr(\"fill\", \"red\")\r\n\r\n            gElem\r\n                .append('circle')\r\n                    .attr(\"cx\",150)\r\n                    .attr(\"cy\",100)\r\n                    .attr(\"r\",80)\r\n                    .attr(\"fill\", \"green\")\r\n\r\n\r\n            gElem\r\n                .append('text')\r\n                    .attr(\"x\",150)\r\n                    .attr(\"y\",125)\r\n                    .attr(\"font-size\",\"60\")\r\n                    .attr(\"text-anchor\", \"middle\")\r\n                    .attr(\"fill\", \"white\")\r\n                    .text(\"SVG\");\r\n\r\n\r\n            updateData = function() {\r\n                console.log(\"Päivitä  hyvä mies\")\r\n            }\r\n\r\n            updateHeight = function() {}\r\n            updateWidth = function() {}\r\n\r\n        })\r\n    }\r\n\r\n    chart.data = function(val){\r\n\r\n        if(!arguments.length) return data;\r\n\r\n        data = val;\r\n\r\n        if(typeof updateData === 'function')\r\n            updateData();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.height = function(val){\r\n\r\n        if(!arguments.length) return height;\r\n\r\n        height = val;\r\n\r\n        if(typeof updateHeight === 'function')\r\n            updateHeight();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    chart.width = function(val){\r\n\r\n        if(!arguments.length) return width;\r\n\r\n        width = val;\r\n\r\n        if(typeof updataWidth === 'function')\r\n            updateWidth();\r\n   \r\n        return chart\r\n\r\n    }\r\n\r\n    return chart\r\n\r\n}","C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\slider\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\hooks\\useKonamiCode.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\toolbar.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\settingsPanel.js",["407","408","409"],"import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n    setAnimationType,\r\n    setAllowedRangeHeight, \r\n    setAllowedRangeWidth,\r\n    setNumberOfParticles\r\n} from \"../../reducers/vectorReducer\";\r\n\r\nimport Slider from \"../../styledComponents/slider/\";\r\nimport NumberInput from \"../../styledComponents/NumberInput\";\r\nimport Toggle from \"../../styledComponents/Toggle\";\r\nimport RadioGroup from \"../../styledComponents/RadioGroup\";\r\n\r\nconst SettingsPanel = () => {\r\n\r\n    const [isToggled, setIsToggled] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /*\r\n     *\r\n     */\r\n    const {\r\n        allowedRangeHeight,\r\n        allowedRangeWidth,\r\n        animation, // Aktiivinen vaihtoehto\r\n        animationTypes,\r\n        numberOfParticles, \r\n        maxAllowedRangeHeight,\r\n        minAllowedRangeHeight,\r\n        maxAllowedRangeWidth,\r\n        minAllowedRangeWidth,\r\n        minNumberOfParticles,\r\n        maxNumberOfParticles\r\n    } = useSelector(state => {\r\n\r\n        let maxAllowedRangeWidth = state.vector.width * 0.9;\r\n        let minAllowedRangeWidth = state.vector.width * 0.5;\r\n\r\n        let maxAllowedRangeHeight = state.vector.height * 0.9;\r\n        let minAllowedRangeHeight = state.vector.height * 0.5;\r\n\r\n        return {\r\n            ...state.vector,\r\n            maxAllowedRangeHeight: maxAllowedRangeHeight,\r\n            minAllowedRangeHeight: minAllowedRangeHeight,\r\n            maxAllowedRangeWidth: maxAllowedRangeWidth,\r\n            minAllowedRangeWidth: minAllowedRangeWidth,\r\n        }\r\n    });\r\n\r\n    const changeHandler = (val) => {\r\n        dispatch(setAnimationType(val))\r\n    }\r\n\r\n    /*\r\n            <Toggle \r\n                isToggled={isToggled}\r\n                onToggle={changeHandler}\r\n            />\r\n     */\r\n    const animationType = () => {\r\n\r\n        const values = Object.entries(animationTypes)\r\n            .map(([key, value]) => {\r\n\r\n                let active = value.value === animation.value;\r\n                return {\r\n                    isActive: active,\r\n                    name: value.name,\r\n                    value: value.value\r\n                }\r\n            });\r\n\r\n        return (\r\n            <RadioGroup \r\n                title=\"Type of Animation\"\r\n                options={values}\r\n                changeHandler={changeHandler}\r\n            />\r\n        )\r\n    }\r\n\r\n    /*\r\n     *\r\n     */\r\n    const particleCount = () => {\r\n\r\n        return(\r\n            <NumberInput \r\n                title=\"Number of particles\"\r\n                id=\"numberOfParticles\"\r\n                changeHandler={(value) => dispatch(setNumberOfParticles(value))}\r\n                value = {numberOfParticles}\r\n                min = {minNumberOfParticles}\r\n                max = {maxNumberOfParticles}\r\n            />\r\n        )\r\n\r\n    }\r\n\r\n    /*\r\n     * Partikkeleille sallitun alueen leveyden säätö\r\n     */\r\n    const rangeHeight = () => {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    changeHandler = {(value) => {\r\n                        dispatch(setAllowedRangeHeight(parseInt(value)))\r\n                    }}\r\n                    color=\"#0074D9\"\r\n                    step={10}\r\n                    minValue = {minAllowedRangeHeight}\r\n                    value = {allowedRangeHeight}\r\n                    maxValue = {maxAllowedRangeHeight}\r\n                    name = \"Height\"\r\n                    id = \"height\"\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n    /*\r\n     * Partikkeleille sallitun alueen leveyden säätö\r\n     */\r\n    const rangeWidth = () => {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    changeHandler = {(value) => {\r\n                        dispatch(setAllowedRangeWidth(parseInt(value)))\r\n                    }}\r\n                    color=\"#d5ad00\"\r\n                    step={10}\r\n                    minValue = {minAllowedRangeWidth}\r\n                    value = {allowedRangeWidth}\r\n                    maxValue = {maxAllowedRangeWidth}\r\n                    name = \"Width\"\r\n                    id = \"width\"\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {animationType()}\r\n            {particleCount()}\r\n            {rangeWidth()}\r\n            {rangeHeight()}\r\n        </div>\r\n    );\r\n};\r\n\r\n/*\r\n            {particleCount()}\r\n            {rangeWidth()}\r\n            {rangeHeight()}\r\n\r\n*/\r\n\r\nexport default SettingsPanel;","C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\meterPanel.js",["410","411","412"],"import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport './vectorPhysics.css';\r\n\r\n/* \r\n * What html markups to use for displaying label/value data?\r\n * https://stackoverflow.com/questions/1687733/what-html-markups-to-use-for-displaying-label-value-data\r\n */\r\nconst MeterPanel = () => {\r\n\r\n    const {data} = useSelector(state => state.vector)\r\n\r\n    return (\r\n        <dl>\r\n            <dt>Active Particles</dt>\r\n            <dd>{data.length}</dd>\r\n        </dl>\r\n    );\r\n};\r\n\r\nexport default MeterPanel;","C:\\Users\\raimo\\Documents\\math\\src\\components\\toolbarHolder\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\toolbarHolder\\toolbarGroub.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\NumberInput\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\NumberInput\\inputElements.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\Toggle\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\Toggle\\inputElements.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\RadioGroup\\index.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\RadioGroup\\inputElements.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\components\\vectorPhysics\\debugControls.js",[],"C:\\Users\\raimo\\Documents\\math\\src\\styledComponents\\Icons\\index.js",[],{"ruleId":"413","severity":1,"message":"414","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":20},{"ruleId":"413","severity":1,"message":"417","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":13},{"ruleId":"413","severity":1,"message":"418","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":22},{"ruleId":"413","severity":1,"message":"419","line":12,"column":8,"nodeType":"415","messageId":"416","endLine":12,"endColumn":21},{"ruleId":"413","severity":1,"message":"420","line":13,"column":8,"nodeType":"415","messageId":"416","endLine":13,"endColumn":19},{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","replacedBy":"424"},{"ruleId":"413","severity":1,"message":"425","line":7,"column":3,"nodeType":"415","messageId":"416","endLine":7,"endColumn":7},{"ruleId":"413","severity":1,"message":"426","line":3,"column":9,"nodeType":"415","messageId":"416","endLine":3,"endColumn":27},{"ruleId":"413","severity":1,"message":"427","line":18,"column":19,"nodeType":"415","messageId":"416","endLine":18,"endColumn":28},{"ruleId":"413","severity":1,"message":"428","line":19,"column":18,"nodeType":"415","messageId":"416","endLine":19,"endColumn":26},{"ruleId":"429","severity":1,"message":"430","line":64,"column":8,"nodeType":"431","endLine":64,"endColumn":14,"suggestions":"432"},{"ruleId":"413","severity":1,"message":"433","line":3,"column":5,"nodeType":"415","messageId":"416","endLine":3,"endColumn":11},{"ruleId":"413","severity":1,"message":"434","line":4,"column":5,"nodeType":"415","messageId":"416","endLine":4,"endColumn":8},{"ruleId":"413","severity":1,"message":"435","line":5,"column":5,"nodeType":"415","messageId":"416","endLine":5,"endColumn":8},{"ruleId":"413","severity":1,"message":"436","line":6,"column":5,"nodeType":"415","messageId":"416","endLine":6,"endColumn":11},{"ruleId":"413","severity":1,"message":"437","line":7,"column":5,"nodeType":"415","messageId":"416","endLine":7,"endColumn":16},{"ruleId":"413","severity":1,"message":"438","line":1,"column":35,"nodeType":"415","messageId":"416","endLine":1,"endColumn":43},{"ruleId":"413","severity":1,"message":"439","line":5,"column":52,"nodeType":"415","messageId":"416","endLine":5,"endColumn":67},{"ruleId":"413","severity":1,"message":"440","line":21,"column":43,"nodeType":"415","messageId":"416","endLine":21,"endColumn":49},{"ruleId":"413","severity":1,"message":"441","line":21,"column":51,"nodeType":"415","messageId":"416","endLine":21,"endColumn":56},{"ruleId":"413","severity":1,"message":"442","line":41,"column":14,"nodeType":"415","messageId":"416","endLine":41,"endColumn":23},{"ruleId":"429","severity":1,"message":"443","line":63,"column":8,"nodeType":"431","endLine":63,"endColumn":17,"suggestions":"444"},{"ruleId":"429","severity":1,"message":"445","line":86,"column":7,"nodeType":"431","endLine":86,"endColumn":24,"suggestions":"446"},{"ruleId":"413","severity":1,"message":"433","line":3,"column":5,"nodeType":"415","messageId":"416","endLine":3,"endColumn":11},{"ruleId":"413","severity":1,"message":"447","line":15,"column":9,"nodeType":"415","messageId":"416","endLine":15,"endColumn":15},{"ruleId":"413","severity":1,"message":"448","line":21,"column":9,"nodeType":"415","messageId":"416","endLine":21,"endColumn":14},{"ruleId":"413","severity":1,"message":"449","line":22,"column":9,"nodeType":"415","messageId":"416","endLine":22,"endColumn":15},{"ruleId":"413","severity":1,"message":"441","line":23,"column":9,"nodeType":"415","messageId":"416","endLine":23,"endColumn":14},{"ruleId":"413","severity":1,"message":"450","line":24,"column":9,"nodeType":"415","messageId":"416","endLine":24,"endColumn":14},{"ruleId":"429","severity":1,"message":"443","line":56,"column":8,"nodeType":"431","endLine":56,"endColumn":14,"suggestions":"451"},{"ruleId":"429","severity":1,"message":"445","line":62,"column":8,"nodeType":"431","endLine":62,"endColumn":18,"suggestions":"452"},{"ruleId":"413","severity":1,"message":"453","line":9,"column":7,"nodeType":"415","messageId":"416","endLine":9,"endColumn":14},{"ruleId":"413","severity":1,"message":"454","line":10,"column":7,"nodeType":"415","messageId":"416","endLine":10,"endColumn":14},{"ruleId":"413","severity":1,"message":"455","line":11,"column":7,"nodeType":"415","messageId":"416","endLine":11,"endColumn":15},{"ruleId":"413","severity":1,"message":"456","line":12,"column":7,"nodeType":"415","messageId":"416","endLine":12,"endColumn":15},{"ruleId":"413","severity":1,"message":"457","line":13,"column":7,"nodeType":"415","messageId":"416","endLine":13,"endColumn":14},{"ruleId":"413","severity":1,"message":"458","line":14,"column":7,"nodeType":"415","messageId":"416","endLine":14,"endColumn":14},{"ruleId":"413","severity":1,"message":"433","line":3,"column":5,"nodeType":"415","messageId":"416","endLine":3,"endColumn":11},{"ruleId":"413","severity":1,"message":"447","line":15,"column":9,"nodeType":"415","messageId":"416","endLine":15,"endColumn":15},{"ruleId":"413","severity":1,"message":"459","line":16,"column":11,"nodeType":"415","messageId":"416","endLine":16,"endColumn":19},{"ruleId":"429","severity":1,"message":"443","line":49,"column":8,"nodeType":"431","endLine":49,"endColumn":14,"suggestions":"460"},{"ruleId":"413","severity":1,"message":"433","line":3,"column":5,"nodeType":"415","messageId":"416","endLine":3,"endColumn":11},{"ruleId":"413","severity":1,"message":"447","line":19,"column":9,"nodeType":"415","messageId":"416","endLine":19,"endColumn":15},{"ruleId":"413","severity":1,"message":"461","line":63,"column":13,"nodeType":"415","messageId":"416","endLine":63,"endColumn":18},{"ruleId":"413","severity":1,"message":"462","line":3,"column":27,"nodeType":"415","messageId":"416","endLine":3,"endColumn":31},{"ruleId":"463","severity":1,"message":"464","line":19,"column":21,"nodeType":"465","endLine":19,"endColumn":59},{"ruleId":"463","severity":1,"message":"464","line":24,"column":21,"nodeType":"465","endLine":24,"endColumn":59},{"ruleId":"463","severity":1,"message":"464","line":29,"column":21,"nodeType":"465","endLine":29,"endColumn":59},{"ruleId":"463","severity":1,"message":"464","line":19,"column":21,"nodeType":"465","endLine":19,"endColumn":48},{"ruleId":"463","severity":1,"message":"464","line":26,"column":21,"nodeType":"465","endLine":26,"endColumn":48},{"ruleId":"463","severity":1,"message":"464","line":33,"column":21,"nodeType":"465","endLine":33,"endColumn":48},{"ruleId":"413","severity":1,"message":"466","line":1,"column":18,"nodeType":"415","messageId":"416","endLine":1,"endColumn":24},{"ruleId":"467","severity":1,"message":"468","line":103,"column":28,"nodeType":"469","messageId":"470","endLine":103,"endColumn":30},{"ruleId":"429","severity":1,"message":"471","line":111,"column":8,"nodeType":"431","endLine":111,"endColumn":14,"suggestions":"472"},{"ruleId":"429","severity":1,"message":"445","line":121,"column":8,"nodeType":"431","endLine":121,"endColumn":18,"suggestions":"473"},{"ruleId":"413","severity":1,"message":"433","line":3,"column":5,"nodeType":"415","messageId":"416","endLine":3,"endColumn":11},{"ruleId":"413","severity":1,"message":"447","line":23,"column":9,"nodeType":"415","messageId":"416","endLine":23,"endColumn":15},{"ruleId":"413","severity":1,"message":"474","line":11,"column":5,"nodeType":"415","messageId":"416","endLine":11,"endColumn":16},{"ruleId":"413","severity":1,"message":"475","line":12,"column":5,"nodeType":"415","messageId":"416","endLine":12,"endColumn":16},{"ruleId":"413","severity":1,"message":"476","line":13,"column":5,"nodeType":"415","messageId":"416","endLine":13,"endColumn":12},{"ruleId":"429","severity":1,"message":"443","line":117,"column":8,"nodeType":"431","endLine":117,"endColumn":14,"suggestions":"477"},{"ruleId":"429","severity":1,"message":"445","line":123,"column":8,"nodeType":"431","endLine":123,"endColumn":18,"suggestions":"478"},{"ruleId":"413","severity":1,"message":"479","line":3,"column":10,"nodeType":"415","messageId":"416","endLine":3,"endColumn":24},{"ruleId":"413","severity":1,"message":"433","line":3,"column":5,"nodeType":"415","messageId":"416","endLine":3,"endColumn":11},{"ruleId":"413","severity":1,"message":"480","line":5,"column":10,"nodeType":"415","messageId":"416","endLine":5,"endColumn":20},{"ruleId":"413","severity":1,"message":"447","line":21,"column":9,"nodeType":"415","messageId":"416","endLine":21,"endColumn":15},{"ruleId":"413","severity":1,"message":"461","line":100,"column":13,"nodeType":"415","messageId":"416","endLine":100,"endColumn":18},{"ruleId":"429","severity":1,"message":"481","line":38,"column":8,"nodeType":"431","endLine":38,"endColumn":19,"suggestions":"482"},{"ruleId":"413","severity":1,"message":"483","line":1,"column":16,"nodeType":"415","messageId":"416","endLine":1,"endColumn":25},{"ruleId":"413","severity":1,"message":"484","line":1,"column":27,"nodeType":"415","messageId":"416","endLine":1,"endColumn":33},{"ruleId":"413","severity":1,"message":"438","line":1,"column":35,"nodeType":"415","messageId":"416","endLine":1,"endColumn":43},{"ruleId":"413","severity":1,"message":"433","line":3,"column":10,"nodeType":"415","messageId":"416","endLine":3,"endColumn":16},{"ruleId":"413","severity":1,"message":"483","line":1,"column":16,"nodeType":"415","messageId":"416","endLine":1,"endColumn":25},{"ruleId":"413","severity":1,"message":"484","line":1,"column":27,"nodeType":"415","messageId":"416","endLine":1,"endColumn":33},{"ruleId":"413","severity":1,"message":"485","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":15},{"ruleId":"413","severity":1,"message":"486","line":18,"column":26,"nodeType":"415","messageId":"416","endLine":18,"endColumn":34},{"ruleId":"429","severity":1,"message":"443","line":56,"column":8,"nodeType":"431","endLine":56,"endColumn":14,"suggestions":"487"},{"ruleId":"413","severity":1,"message":"433","line":3,"column":5,"nodeType":"415","messageId":"416","endLine":3,"endColumn":11},{"ruleId":"413","severity":1,"message":"488","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":26},{"ruleId":"413","severity":1,"message":"447","line":16,"column":9,"nodeType":"415","messageId":"416","endLine":16,"endColumn":15},{"ruleId":"413","severity":1,"message":"466","line":1,"column":24,"nodeType":"415","messageId":"416","endLine":1,"endColumn":30},{"ruleId":"413","severity":1,"message":"479","line":3,"column":10,"nodeType":"415","messageId":"416","endLine":3,"endColumn":24},{"ruleId":"413","severity":1,"message":"489","line":15,"column":7,"nodeType":"415","messageId":"416","endLine":15,"endColumn":34},{"ruleId":"413","severity":1,"message":"490","line":16,"column":7,"nodeType":"415","messageId":"416","endLine":16,"endColumn":25},{"ruleId":"413","severity":1,"message":"491","line":26,"column":9,"nodeType":"415","messageId":"416","endLine":26,"endColumn":16},{"ruleId":"413","severity":1,"message":"492","line":24,"column":11,"nodeType":"415","messageId":"416","endLine":24,"endColumn":18},{"ruleId":"413","severity":1,"message":"427","line":18,"column":20,"nodeType":"415","messageId":"416","endLine":18,"endColumn":29},{"ruleId":"413","severity":1,"message":"428","line":19,"column":19,"nodeType":"415","messageId":"416","endLine":19,"endColumn":27},{"ruleId":"429","severity":1,"message":"443","line":55,"column":8,"nodeType":"431","endLine":55,"endColumn":14,"suggestions":"493"},{"ruleId":"421","replacedBy":"494"},{"ruleId":"423","replacedBy":"495"},{"ruleId":"413","severity":1,"message":"447","line":17,"column":9,"nodeType":"415","messageId":"416","endLine":17,"endColumn":15},{"ruleId":"413","severity":1,"message":"496","line":42,"column":9,"nodeType":"415","messageId":"416","endLine":42,"endColumn":21},{"ruleId":"413","severity":1,"message":"497","line":157,"column":13,"nodeType":"415","messageId":"416","endLine":157,"endColumn":17},{"ruleId":"467","severity":1,"message":"468","line":164,"column":38,"nodeType":"469","messageId":"470","endLine":164,"endColumn":40},{"ruleId":"429","severity":1,"message":"443","line":65,"column":8,"nodeType":"431","endLine":65,"endColumn":18,"suggestions":"498"},{"ruleId":"413","severity":1,"message":"499","line":3,"column":8,"nodeType":"415","messageId":"416","endLine":3,"endColumn":14},{"ruleId":"413","severity":1,"message":"500","line":17,"column":9,"nodeType":"415","messageId":"416","endLine":17,"endColumn":25},{"ruleId":"413","severity":1,"message":"501","line":12,"column":18,"nodeType":"415","messageId":"416","endLine":12,"endColumn":25},{"ruleId":"413","severity":1,"message":"427","line":13,"column":20,"nodeType":"415","messageId":"416","endLine":13,"endColumn":29},{"ruleId":"413","severity":1,"message":"428","line":14,"column":19,"nodeType":"415","messageId":"416","endLine":14,"endColumn":27},{"ruleId":"429","severity":1,"message":"443","line":54,"column":8,"nodeType":"431","endLine":54,"endColumn":14,"suggestions":"502"},{"ruleId":"421","replacedBy":"503"},{"ruleId":"423","replacedBy":"504"},{"ruleId":"413","severity":1,"message":"447","line":14,"column":9,"nodeType":"415","messageId":"416","endLine":14,"endColumn":15},{"ruleId":"413","severity":1,"message":"505","line":13,"column":8,"nodeType":"415","messageId":"416","endLine":13,"endColumn":14},{"ruleId":"413","severity":1,"message":"506","line":18,"column":12,"nodeType":"415","messageId":"416","endLine":18,"endColumn":21},{"ruleId":"413","severity":1,"message":"507","line":18,"column":23,"nodeType":"415","messageId":"416","endLine":18,"endColumn":35},{"ruleId":"413","severity":1,"message":"508","line":4,"column":8,"nodeType":"415","messageId":"416","endLine":4,"endColumn":17},{"ruleId":"413","severity":1,"message":"509","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":11},{"ruleId":"413","severity":1,"message":"510","line":6,"column":8,"nodeType":"415","messageId":"416","endLine":6,"endColumn":11},"no-unused-vars","'Trigonometry' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'LissajousCurve' is defined but never used.","'RotatingArrow' is defined but never used.","'LandingPage' is defined but never used.","no-native-reassign",["511"],"no-negated-in-lhs",["512"],"'Link' is defined but never used.","'interpolateCividis' is defined but never used.","'setHeight' is assigned a value but never used.","'setWidth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initVis'. Either include it or remove the dependency array.","ArrayExpression",["513"],"'select' is defined but never used.","'min' is defined but never used.","'max' is defined but never used.","'extent' is defined but never used.","'scaleLinear' is defined but never used.","'useState' is defined but never used.","'updateYAndAngle' is defined but never used.","'offset' is assigned a value but never used.","'speed' is assigned a value but never used.","'stopTimer' is defined but never used.","React Hook useEffect has missing dependencies: 'initVis' and 'updateVis'. Either include them or remove the dependency array.",["514"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["515"],"'margin' is assigned a value but never used.","'count' is assigned a value but never used.","'offset' is defined but never used.","'angle' is assigned a value but never used.",["516"],["517"],"'X_ANGLE' is assigned a value but never used.","'Y_ANGLE' is assigned a value but never used.","'X_RADIUS' is assigned a value but never used.","'Y_RADIUS' is assigned a value but never used.","'X_SPEED' is assigned a value but never used.","'Y_SPEED' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["518"],"'arrow' is assigned a value but never used.","'Tupu' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Vector' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch', 'initVis', and 'updateVis'. Either include them or remove the dependency array.",["519"],["520"],"'kaannaVasen' is defined but never used.","'kaannaOikea' is defined but never used.","'liikuta' is defined but never used.",["521"],["522"],"'getRandomColor' is defined but never used.","'accelerate' is defined but never used.","React Hook useEffect has a missing dependency: 'element'. Either include it or remove the dependency array.",["523"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'Toolbar' is defined but never used.","'isActive' is assigned a value but never used.",["524"],"'gravitationReducer' is defined but never used.","'getInitialNumberOfParticles' is assigned a value but never used.","'getInitialRotation' is assigned a value but never used.","'jupiter' is assigned a value but never used.","'padding' is assigned a value but never used.",["525"],["511"],["512"],"'transitionMs' is assigned a value but never used.","'arcs' is assigned a value but never used.",["526"],"'styled' is defined but never used.","'handleStepChange' is assigned a value but never used.","'setData' is assigned a value but never used.",["527"],["511"],["512"],"'Toggle' is defined but never used.","'isToggled' is assigned a value but never used.","'setIsToggled' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"534","fix":"538"},{"desc":"539","fix":"540"},{"desc":"536","fix":"541"},{"desc":"534","fix":"542"},{"desc":"536","fix":"543"},{"desc":"544","fix":"545"},{"desc":"534","fix":"546"},{"desc":"534","fix":"547"},{"desc":"548","fix":"549"},{"desc":"534","fix":"550"},"Update the dependencies array to be: [data, initVis]",{"range":"551","text":"552"},"Update the dependencies array to be: [data, initVis, updateVis, y]",{"range":"553","text":"554"},"Update the dependencies array to be: [isActive, angle, dispatch]",{"range":"555","text":"556"},"Update the dependencies array to be: [data, initVis, updateVis]",{"range":"557","text":"558"},"Update the dependencies array to be: [dispatch, isActive]",{"range":"559","text":"560"},{"range":"561","text":"558"},"Update the dependencies array to be: [data, dispatch, initVis, updateVis]",{"range":"562","text":"563"},{"range":"564","text":"560"},{"range":"565","text":"558"},{"range":"566","text":"560"},"Update the dependencies array to be: [element, eventName]",{"range":"567","text":"568"},{"range":"569","text":"558"},{"range":"570","text":"558"},"Update the dependencies array to be: [initVis, rotation, updateVis]",{"range":"571","text":"572"},{"range":"573","text":"558"},[1146,1152],"[data, initVis]",[1284,1293],"[data, initVis, updateVis, y]",[1619,1636],"[isActive, angle, dispatch]",[1116,1122],"[data, initVis, updateVis]",[1190,1200],"[dispatch, isActive]",[1079,1085],[2397,2403],"[data, dispatch, initVis, updateVis]",[2553,2563],[2732,2738],[2806,2816],[985,996],"[element, eventName]",[1155,1161],[1063,1069],[1245,1255],"[initVis, rotation, updateVis]",[1086,1092]]